"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[9651],{35117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>x,frontMatter:()=>c,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"concepts/input/focus","title":"Focus","description":"Focus refers to the InputElement which is expected to receive keyboard input and are typically","source":"@site/docs/concepts/input/focus.md","sourceDirName":"concepts/input","slug":"/concepts/input/focus","permalink":"/avalonia-docs-ko/docs/concepts/input/focus","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/concepts/input/focus.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755672260000,"frontMatter":{"id":"focus","title":"Focus"},"sidebar":"documentationSidebar","previous":{"title":"Mouse and Pointer Devices","permalink":"/avalonia-docs-ko/docs/concepts/input/pointer"},"next":{"title":"Gestures","permalink":"/avalonia-docs-ko/docs/concepts/input/gestures"}}');var s=n(74848),o=n(28453);const l=n.p+"assets/images/directional-navigation-420ad0add3d83b32bb2415cc4d10f40d.gif",c={id:"focus",title:"Focus"},a="Focus",d={},r=[{value:"IsFocused and Focusable",id:"isfocused-and-focusable",level:2},{value:"Explicit Focusing",id:"explicit-focusing",level:2},{value:"Focus Events",id:"focus-events",level:2},{value:"Focus Pseudoclasses",id:"focus-pseudoclasses",level:2},{value:"FocusManager",id:"focusmanager",level:2},{value:"Tab Focus Navigation",id:"tab-focus-navigation",level:2},{value:"Directional Focus Navigation <MinVersion></MinVersion>",id:"directional-focus-navigation-",level:2},{value:"Navigation Strategy",id:"navigation-strategy",level:3},{value:"Explicit Navigation",id:"explicit-navigation",level:3},{value:"Example",id:"example",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,o.R)(),...e.components},{MinVersion:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MinVersion",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"focus",children:"Focus"})}),"\n",(0,s.jsxs)(t.p,{children:["Focus refers to the ",(0,s.jsx)(t.code,{children:"InputElement"})," which is expected to receive keyboard input and are typically\ndistinguished with a visual indicator. The most familiar example is a ",(0,s.jsx)(t.code,{children:"TextBox"})," with a blinking cursor inside, but\nnon-textual controls like ",(0,s.jsx)(t.code,{children:"Button"})," and ",(0,s.jsx)(t.code,{children:"Slider"})," also participate in focus."]}),"\n",(0,s.jsx)(t.h2,{id:"isfocused-and-focusable",children:"IsFocused and Focusable"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"IsFocused"})," is a get-only property that keeps track of the ",(0,s.jsx)(t.code,{children:"InputElement"}),"'s focus state."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Focusable"})," property enables or disables the ability to focus an ",(0,s.jsx)(t.code,{children:"InputElement"}),". Elements which cannot be focused\ncan still be interacted with via pointer, so some care should be taken that a functional keyboard equivalent (such as\nhotkeys) is available when possible."]}),"\n",(0,s.jsx)(t.h2,{id:"explicit-focusing",children:"Explicit Focusing"}),"\n",(0,s.jsxs)(t.p,{children:["To explicitly assign focus to any ",(0,s.jsx)(t.code,{children:"InputElement"}),", call its ",(0,s.jsx)(t.code,{children:".Focus()"})," method from code. Optionally, you may specify the\n",(0,s.jsx)(t.code,{children:"NavigationMethod"})," and ",(0,s.jsx)(t.code,{children:"KeyModifiers"})," to simulate as if the focus were triggered by a specific focus navigation flow. Explicit\nfocusing is often used to focus a specific ",(0,s.jsx)(t.code,{children:"InputElement"})," in a data entry form upon loading or to programmatically move\nto the next ",(0,s.jsx)(t.code,{children:"InputControl"})," once the current input has been satisfied."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"NavigationMethod"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Trigger Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Tab"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Tab key press"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Pointer"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Pointer interaction"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Directional"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["2D Directional (",(0,s.jsx)(t.code,{children:"XYFocus"}),")"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Unspecified"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Default"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"focus-events",children:"Focus Events"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"InputElement"}),"s expose ",(0,s.jsx)(t.code,{children:"GotFocus"})," and ",(0,s.jsx)(t.code,{children:"LostFocus"})," events. The ",(0,s.jsx)(t.code,{children:"GotFocusEventArgs"})," contains the ",(0,s.jsx)(t.code,{children:"NavigationMethod"})," and\n",(0,s.jsx)(t.code,{children:"KeyModifiers"})," used to trigger the focus navigation."]}),"\n",(0,s.jsx)(t.h2,{id:"focus-pseudoclasses",children:"Focus Pseudoclasses"}),"\n",(0,s.jsxs)(t.p,{children:["These pseudoclasses are helpful when styling ",(0,s.jsx)(t.code,{children:"Control"}),"s that are ",(0,s.jsx)(t.code,{children:"Focusable"}),"."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Pseudoclass"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:":focus"}),(0,s.jsx)(t.td,{children:"The Control has focus."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:":focus-within"}),(0,s.jsx)(t.td,{children:"The Control has focus or contains a descendant that has focus."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:":focus-visible"}),(0,s.jsx)(t.td,{children:"The Control has focus and should show a visual indicator."})]})]})]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"FocusAdorner"})," property is used to show a default focus visual, typically a ",(0,s.jsx)(t.code,{children:"Border"}),", around a ",(0,s.jsx)(t.code,{children:"Control"})," with\n",(0,s.jsx)(t.code,{children:":focus-visible"}),". When using ",(0,s.jsx)(t.code,{children:":focus-visible"})," to show a custom visual indicator, setting ",(0,s.jsx)(t.code,{children:"FocusAdorner"})," to ",(0,s.jsx)(t.code,{children:"null"})," will\navoid showing a duplicate indicator."]})}),"\n",(0,s.jsx)(t.h2,{id:"focusmanager",children:"FocusManager"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"FocusManager"})," provides global access to focus functionality, such as retrieving the currently focused element or\nclearing focus. For additional information, see the ",(0,s.jsx)(t.a,{href:"../services/focus-manager",children:"FocusManager docs"}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"tab-focus-navigation",children:"Tab Focus Navigation"}),"\n",(0,s.jsxs)(t.p,{children:["Focus navigation by tab occurs when the user presses tab on their keyboard. ",(0,s.jsx)(t.code,{children:"InputElement"}),"s with their ",(0,s.jsx)(t.code,{children:"IsTabStop"})," property\nset to ",(0,s.jsx)(t.code,{children:"true"})," will be available for tab focus navigation. The ",(0,s.jsx)(t.code,{children:"TabIndex"})," specifies the priority with lower numeric values being\nnavigated to first. When the ",(0,s.jsx)(t.code,{children:"TabIndex"})," of multiple controls is equal, the priority is based on a Visual Tree traversal order."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"KeyboardNavigation.TabNavigation"})," attached property can set a ",(0,s.jsx)(t.code,{children:"KeyboardNavigationMode"})," onto any ",(0,s.jsx)(t.code,{children:"InputElement"})," acting as\na container and modify its tab navigation characteristics."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"KeyboardNavigationMode"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Container Item Traversal"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Continue"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Continues past items and into the next container"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Cycle"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Cycles through and wraps back within its own items"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Contained"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Stops at the beginning/end item"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Once"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Container and children receive focus only once as a group"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"None"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Items will not be focused by tab navigation"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Local"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.code,{children:"TabIndex"})," is considered for items in local subtree only"]})]})]})]}),"\n",(0,s.jsxs)(t.h2,{id:"directional-focus-navigation-",children:["Directional Focus Navigation ",(0,s.jsx)(n,{version:"11.1"})]}),"\n",(0,s.jsxs)(t.p,{children:["Focus navigation through ",(0,s.jsx)(t.code,{children:"XYFocus"})," is a 2D directional scheme enabling spatial navigation from the focused control\ntowards another control in a cardinal direction: left, right, up, or down. By default, ",(0,s.jsx)(t.code,{children:"XYFocus.NavigationModes"})," is set\nto allow ",(0,s.jsx)(t.code,{children:"Gamepad"})," and ",(0,s.jsx)(t.code,{children:"Remote"})," navigation."]}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"KeyDeviceType"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Device"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Disabled"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Any key device XY navigation is disabled."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Keyboard"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Keyboard arrow keys can be used."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Gamepad"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Gamepad controller DPad can be used."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Remote"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Remote control can be used."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Enabled"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"All devices can be used."})]})]})]}),"\n",(0,s.jsx)(t.p,{children:"Gamepad inputs are supported on devices that can natively send these inputs, such as Android and Tizen. However,\nAvalonia currently lacks cross-platform Gamepad APIs required for broad out-of-the-box support."}),"\n",(0,s.jsx)(t.h3,{id:"navigation-strategy",children:"Navigation Strategy"}),"\n",(0,s.jsx)(t.p,{children:"When 2D directional navigation is enabled, a disambiguation strategy is used to select the navigation target."}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"XYFocusNavigationStrategy"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Navigation Target"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Auto"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Inherits strategy from ancestor. Projection if no ancestor specifies."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Projection"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"First element encountered when projecting a line in the navigation direction."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"NavigationDirectionDistance"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Closest element to the axis of the navigation line."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"RectilinearDistance"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Closest element based on the shortest Manhattan distance."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"explicit-navigation",children:"Explicit Navigation"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.code,{children:"XYFocus"})," allows each control to specify an explicit navigation target when a direction is pressed via ",(0,s.jsx)(t.code,{children:"XYFocus.Up"}),",\n",(0,s.jsx)(t.code,{children:"XYFocus.Down"}),", ",(0,s.jsx)(t.code,{children:"XYFocus.Left"}),", and ",(0,s.jsx)(t.code,{children:"XYFocus.Right"}),". This has priority over any navigation strategy."]}),"\n",(0,s.jsx)(t.admonition,{type:"warning",children:(0,s.jsx)(t.p,{children:"Focus engagement is not yet implemented, so combining Directional focus navigation with controls that also handle\ndirectional input themselves may have some limitations, especially with visuals."})}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(t.p,{children:["The following demonstrates how to use Directional focus navigation in a ",(0,s.jsx)(t.code,{children:"WrapPanel"}),". It explicitly allows navigation to\nwrap from the first to the last element and vice-versa."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"Slider"})," provides an example of mixing navigation with control interaction. On Desktop, pressing the Enter key while\nthe ",(0,s.jsx)(t.code,{children:"Slider"})," is focused will begin an interaction where the user will modify the ",(0,s.jsx)(t.code,{children:"Slider.Value"})," instead of causing\nnavigation. Pressing Enter a second time will end the interaction and resume Directional focus navigation."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-xml",children:'<Window\n    XYFocus.NavigationModes="Enabled"\n    XYFocus.UpNavigationStrategy="Projection"\n    XYFocus.DownNavigationStrategy="Projection"\n    XYFocus.LeftNavigationStrategy="Projection"\n    XYFocus.RightNavigationStrategy="Projection">\n    <Grid>\n        <WrapPanel>\n            <Button x:Name="first"\n                Content="First"\n                XYFocus.Left="{Binding #last}" />\n            <Button Content="Second" />\n            <Button Content="Third" />\n    \n            <Slider Width="100" Maximum="100" />\n    \n            <Button Content="Fourth" />\n            <Button x:Name="last"\n                Content="Last"\n                XYFocus.Right="{Binding #first}" />\n        </WrapPanel>\n    </Grid>\n</Window>\n'})}),"\n",(0,s.jsx)("img",{src:l,alt:"Directional Navigation Example"})]})}function x(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>c});var i=n(96540);const s={},o=i.createContext(s);function l(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);