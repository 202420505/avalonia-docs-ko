"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[7023],{71342:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>i});const a=JSON.parse('{"id":"get-started/wpf/propertychangedcallback","title":"PropertyChangedCallback","description":"Listening to changes on DependencyProperties in WPF can be complex. When you register a DependencyProperty you can supply a static PropertyChangedCallback but if you want to listen to changes from elsewhere things can get complicated and error-prone.","source":"@site/docs/get-started/wpf/propertychangedcallback.md","sourceDirName":"get-started/wpf","slug":"/get-started/wpf/propertychangedcallback","permalink":"/avalonia-docs-ko/docs/get-started/wpf/propertychangedcallback","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/get-started/wpf/propertychangedcallback.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755672260000,"frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Class Handlers","permalink":"/avalonia-docs-ko/docs/get-started/wpf/class-handlers"},"next":{"title":"RenderTransforms and RenderTransformOrigin","permalink":"/avalonia-docs-ko/docs/get-started/wpf/rendertransforms-and-rendertransformorigin"}}');var r=n(74848),o=n(28453);const s={},c="PropertyChangedCallback",d={},i=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",...(0,o.R)(),...e.components},{XpfAd:n}=t;return n||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("XpfAd",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"propertychangedcallback",children:"PropertyChangedCallback"})}),"\n",(0,r.jsxs)(t.p,{children:["Listening to changes on DependencyProperties in WPF can be complex. When you register a ",(0,r.jsx)(t.code,{children:"DependencyProperty"})," you can supply a static ",(0,r.jsx)(t.code,{children:"PropertyChangedCallback"})," but if you want to listen to changes from elsewhere ",(0,r.jsx)(t.a,{href:"https://stackoverflow.com/questions/23682232",children:"things can get complicated and error-prone"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["In Avalonia, there is no ",(0,r.jsx)(t.code,{children:"PropertyChangedCallback"})," at the time of registration, instead a class listener is ",(0,r.jsx)(t.a,{href:"../../guides/data-binding/binding-from-code#subscribing-to-a-property-on-any-object",children:"added to the control's static constructor in much the same way that event class listeners are added"}),"."]}),"\n",(0,r.jsx)(n,{})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var a=n(96540);const r={},o=a.createContext(r);function s(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);