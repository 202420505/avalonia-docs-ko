"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[711],{34832:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>u,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"reference/controls/slider","title":"Slider","description":"REFERENCE - Built-in Controls","source":"@site/docs/reference/controls/slider.md","sourceDirName":"reference/controls","slug":"/reference/controls/slider","permalink":"/avalonia-docs-ko/docs/reference/controls/slider","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/reference/controls/slider.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755671977000,"frontMatter":{"description":"REFERENCE - Built-in Controls"},"sidebar":"documentationSidebar","previous":{"title":"Separator","permalink":"/avalonia-docs-ko/docs/reference/controls/separator"},"next":{"title":"SplitView","permalink":"/avalonia-docs-ko/docs/reference/controls/splitview"}}');var a=i(74848),s=i(28453);const l=i.p+"assets/images/slider-1320aba115fea34426c896c1469d2a39.gif",o=i.p+"assets/images/slider-max-value-af0708462004708b42c2dabec8eb0bda.gif",r={description:"REFERENCE - Built-in Controls"},d="Slider",c={},h=[{value:"Useful Properties",id:"useful-properties",level:2},{value:"Example",id:"example",level:2},{value:"Binding to TextBox",id:"binding-to-textbox",level:2},{value:"Views",id:"views",level:3},{value:"ViewModels",id:"viewmodels",level:3},{value:"More Information",id:"more-information",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"slider",children:"Slider"})}),"\n",(0,a.jsx)(n.p,{children:"The slider control presents its numerical value as the relative position of a slider button along the length of a track. The position is relative to maximum and minimum values."}),"\n",(0,a.jsx)(n.p,{children:"Drag interaction on the slider button can alter the value between the maximum and minimum values. Keyboard and click interactions can also nudge the value."}),"\n",(0,a.jsx)(n.h2,{id:"useful-properties",children:"Useful Properties"}),"\n",(0,a.jsx)(n.p,{children:"You will probably use these properties most often:"}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{width:"197",children:"Property"}),(0,a.jsx)("th",{children:"Description"})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Maximum"}),(0,a.jsx)("td",{children:"Sets the maximum value."})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:"Minimum"}),(0,a.jsx)("td",{children:"Sets the minimum value."})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"In this example the slider value is displayed in the text block below, using binding to a control."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["To review how to bind one control to another, see the guide ",(0,a.jsx)(n.a,{href:"/avalonia-docs-ko/docs/guides/data-binding/binding-to-controls",children:"here"}),"."]})}),"\n",(0,a.jsx)(n.p,{children:"Here the maximum and minimum values are default (0 and 100 respectively)."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<StackPanel Margin="20">\n  <TextBlock Text="{Binding #slider.Value}" \n              HorizontalAlignment="Center"/>\n  <Slider x:Name="slider" />\n</StackPanel>\n'})}),"\n",(0,a.jsx)(n.p,{children:"The slider looks like this on Windows:"}),"\n",(0,a.jsx)("img",{src:l,alt:""}),"\n",(0,a.jsx)(n.h2,{id:"binding-to-textbox",children:"Binding to TextBox"}),"\n",(0,a.jsx)(n.p,{children:"In this example, the slider value is bound to the text box above using binding to the control."}),"\n",(0,a.jsx)(n.h3,{id:"views",children:"Views"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<StackPanel>\n  <TextBlock Text="Damage: " />\n  <TextBox Text="{Binding Damage}" />\n  <TextBlock Text="MaxDamage: " />\n  <TextBox Text="{Binding MaxDamage}" />\n  <Slider Maximum="{Binding MaxDamage}" Value="{Binding Damage}" />\n  <Button Command="{Binding UnlimitedDamage}" Content="\u221e" />\n</StackPanel>\n'})}),"\n",(0,a.jsx)(n.h3,{id:"viewmodels",children:"ViewModels"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["You can choose ",(0,a.jsx)(n.a,{href:"/avalonia-docs-ko/docs/concepts/reactiveui/",children:"ReactiveUI"})," or ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/communitytoolkit/mvvm/",children:"CommunityToolkit"})," when creating a project."]}),"\n",(0,a.jsx)(n.li,{children:"The ViewModel code will change depending on which one you select."}),"\n",(0,a.jsx)(n.li,{children:"It doesn't matter which you choose, but here i will only detail how to binding using ReactiveUI."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"using ReactiveUI;\nusing System.Windows.Input;\npublic class MainViewModel : ViewModelBase\n{\n    private int _damage;\n    public int Damage\n    {\n        get => _damage;\n        set => this.RaiseAndSetIfChanged(ref _damage, value);\n    }\n    private int _maxDamage;\n    public int MaxDamage\n    {\n        get => _maxDamage;\n        set => this.RaiseAndSetIfChanged(ref _maxDamage, value);\n    }\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["using ",(0,a.jsx)(n.a,{href:"https://www.reactiveui.net/docs/handbook/view-models/boilerplate-code.html",children:"ReactiveUI.Fody.Helpers"})," NOTE: Fody.Helpers is not required (optional)."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["On how to add a nuget package, you can follow steps from the NuGet page or ",(0,a.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/nuget/quickstart/install-and-use-a-package-in-visual-studio",children:"Visual Studio"}),", ",(0,a.jsx)(n.a,{href:"https://www.jetbrains.com/help/rider/Using_NuGet.html",children:"Rider"})," documentation."]})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"using ReactiveUI.Fody.Helpers;\npublic class MainViewModel : ViewModelBase\n{\n    [Reactive]\n    public int Damage { get; set; }\n    [Reactive]\n    public int MaxDamage { get; set; }\n"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"In the above configuration (i.e. when a change notification is bound between the Views and the ViewModels) can the values \u200b\u200bin the view be updated seemless."}),"\n",(0,a.jsx)(n.li,{children:"You can also values \u200b\u200bare updated in ViewModels.:"}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-cs",children:"    public ICommand UnlimitedDamage { get; }\n    public MainViewModel()\n    {\n        MaxDamage = 9999;\n        UnlimitedDamage = ReactiveCommand.Create(\n            () => Damage = MaxDamage = 0xFFFF);\n    }\n"})}),"\n",(0,a.jsx)("img",{src:o,alt:""}),"\n",(0,a.jsx)(n.h2,{id:"more-information",children:"More Information"}),"\n",(0,a.jsxs)(n.p,{children:["For the complete API documentation about this control, see ",(0,a.jsx)(n.a,{href:"https://api-docs.avaloniaui.net/docs/T_Avalonia_Controls_Slider",children:"here"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["View the source code on ",(0,a.jsx)(n.em,{children:"GitHub"})," ",(0,a.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/Slider.cs",children:(0,a.jsx)(n.code,{children:"Slider.cs"})})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var t=i(96540);const a={},s=t.createContext(a);function l(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);