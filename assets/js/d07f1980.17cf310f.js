"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[3758],{32096:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>t,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"deployment/native-aot","title":"Native AOT Deployment","description":"Native AOT (Ahead-of-Time) compilation allows you to publish your Avalonia applications as self-contained executables with native performance characteristics. This guide covers Avalonia-specific considerations and setup for Native AOT deployment.","source":"@site/docs/deployment/native-aot.md","sourceDirName":"deployment","slug":"/deployment/native-aot","permalink":"/avalonia-docs-ko/docs/deployment/native-aot","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/deployment/native-aot.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755602518000,"frontMatter":{"id":"native-aot","title":"Native AOT Deployment"},"sidebar":"documentationSidebar","previous":{"title":"Debian / Ubuntu packaging","permalink":"/avalonia-docs-ko/docs/deployment/debian-ubuntu"},"next":{"title":"Reference","permalink":"/avalonia-docs-ko/docs/reference/"}}');var s=i(74848),o=i(28453);const t={id:"native-aot",title:"Native AOT Deployment"},r=void 0,a={},c=[{value:"Benefits for Avalonia Applications",id:"benefits-for-avalonia-applications",level:2},{value:"Setting Up Native AOT for Avalonia",id:"setting-up-native-aot-for-avalonia",level:2},{value:"1. Project Configuration",id:"1-project-configuration",level:3},{value:"2. Trimming Configuration",id:"2-trimming-configuration",level:3},{value:"Avalonia-Specific Considerations",id:"avalonia-specific-considerations",level:2},{value:"XAML Loading",id:"xaml-loading",level:3},{value:"Assets and Resources",id:"assets-and-resources",level:3},{value:"ViewModels and Dependency Injection",id:"viewmodels-and-dependency-injection",level:3},{value:"Publishing Avalonia Native AOT Applications",id:"publishing-avalonia-native-aot-applications",level:2},{value:"Windows",id:"windows",level:3},{value:"Linux",id:"linux",level:3},{value:"macOS",id:"macos",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:2},{value:"1. Missing XAML Controls",id:"1-missing-xaml-controls",level:3},{value:"2. Reflection-Related Errors",id:"2-reflection-related-errors",level:3},{value:"Known Limitations",id:"known-limitations",level:2},{value:"Platform Support",id:"platform-support",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Additional Resources",id:"additional-resources",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Native AOT (Ahead-of-Time) compilation allows you to publish your Avalonia applications as self-contained executables with native performance characteristics. This guide covers Avalonia-specific considerations and setup for Native AOT deployment."}),"\n",(0,s.jsx)(n.h2,{id:"benefits-for-avalonia-applications",children:"Benefits for Avalonia Applications"}),"\n",(0,s.jsx)(n.p,{children:"Native AOT compilation provides several advantages specifically relevant to Avalonia applications:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Faster application startup time, particularly beneficial for desktop applications"}),"\n",(0,s.jsx)(n.li,{children:"Reduced memory footprint for resource-constrained environments"}),"\n",(0,s.jsx)(n.li,{children:"Self-contained deployment without requiring .NET runtime installation"}),"\n",(0,s.jsx)(n.li,{children:"Improved security through reduced attack surface (no JIT compilation)"}),"\n",(0,s.jsx)(n.li,{children:"Smaller distribution size when combined with trimming"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"setting-up-native-aot-for-avalonia",children:"Setting Up Native AOT for Avalonia"}),"\n",(0,s.jsx)(n.h3,{id:"1-project-configuration",children:"1. Project Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Add the following to your csproj file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n    <PublishAot>true</PublishAot>\n    \x3c!-- Recommended Avalonia trimming settings for Native AOT --\x3e\n    <BuiltInComInteropSupport>false</BuiltInComInteropSupport>\n    <TrimMode>link</TrimMode>\n</PropertyGroup>\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-trimming-configuration",children:"2. Trimming Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Native AOT requires trimming. Add these trim settings specific to Avalonia:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n    \x3c!-- Preserve Avalonia types for reflection --\x3e\n    <TrimmerRootAssembly Include="Avalonia.Themes.Fluent" />\n    <TrimmerRootAssembly Include="Avalonia.Themes.Default" />\n</ItemGroup>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"avalonia-specific-considerations",children:"Avalonia-Specific Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"xaml-loading",children:"XAML Loading"}),"\n",(0,s.jsx)(n.p,{children:"When using Native AOT, XAML is compiled into the application at build time. Ensure you:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:'x:CompileBindings="True"'})," in your XAML files"]}),"\n",(0,s.jsx)(n.li,{children:"Avoid dynamic XAML loading at runtime"}),"\n",(0,s.jsx)(n.li,{children:"Use static resource references instead of dynamic resources where possible"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"assets-and-resources",children:"Assets and Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Bundle all assets as embedded resources"}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"AvaloniaResource"})," build action for your assets"]}),"\n",(0,s.jsx)(n.li,{children:"Avoid dynamic asset loading from external sources"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"viewmodels-and-dependency-injection",children:"ViewModels and Dependency Injection"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Register your ViewModels at startup"}),"\n",(0,s.jsx)(n.li,{children:"Use compile-time DI configuration"}),"\n",(0,s.jsx)(n.li,{children:"Avoid reflection-based service location"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"publishing-avalonia-native-aot-applications",children:"Publishing Avalonia Native AOT Applications"}),"\n",(0,s.jsx)(n.h3,{id:"windows",children:"Windows"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet publish -r win-x64 -c Release\n"})}),"\n",(0,s.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet publish -r linux-x64 -c Release\n"})}),"\n",(0,s.jsx)(n.h3,{id:"macos",children:"macOS"}),"\n",(0,s.jsx)(n.p,{children:"Intel based macOS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet publish -r osx-x64 -c Release\n"})}),"\n",(0,s.jsx)(n.p,{children:"Apple silicon based macOS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"dotnet publish -r osx-arm64 -c Release\n"})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can then use Apple's ",(0,s.jsx)(n.a,{href:"https://developer.apple.com/documentation/apple-silicon/building-a-universal-macos-binary",children:"lipo tool"})," to combine both Intel and Apple Silicon binaries, enabling you to ship  Universal binaries."]})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,s.jsx)(n.h3,{id:"1-missing-xaml-controls",children:"1. Missing XAML Controls"}),"\n",(0,s.jsx)(n.p,{children:"If controls are missing at runtime:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n    \x3c!-- Add specific Avalonia controls you\'re using --\x3e\n    <TrimmerRootAssembly Include="Avalonia.Controls" />\n</ItemGroup>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"2-reflection-related-errors",children:"2. Reflection-Related Errors"}),"\n",(0,s.jsx)(n.p,{children:"For ViewModels or services using reflection:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n    <TrimmerRootDescriptor Include="TrimmerRoots.xml" />\n</ItemGroup>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Create a ",(0,s.jsx)(n.code,{children:"TrimmerRoots.xml"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<linker>\n    <assembly fullname="YourApplication">\n        <type fullname="YourApplication.ViewModels*" preserve="all"/>\n    </assembly>\n</linker>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"known-limitations",children:"Known Limitations"}),"\n",(0,s.jsx)(n.p,{children:"When using Native AOT with Avalonia, be aware of these limitations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Dynamic control creation must be configured in trimmer settings"}),"\n",(0,s.jsx)(n.li,{children:"Some third-party Avalonia controls may not be AOT-compatible"}),"\n",(0,s.jsx)(n.li,{children:"Platform-specific features need explicit configuration"}),"\n",(0,s.jsx)(n.li,{children:"Live preview in design-time tools may be limited"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"platform-support",children:"Platform Support"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Platform"}),(0,s.jsx)(n.th,{children:"Status"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Windows x64"}),(0,s.jsx)(n.td,{children:"\u2705 Supported"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Windows Arm64"}),(0,s.jsx)(n.td,{children:"\u2705 Supported"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Linux x64"}),(0,s.jsx)(n.td,{children:"\u2705 Supported"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Linux Arm64"}),(0,s.jsx)(n.td,{children:"\u2705 Supported"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"macOS x64"}),(0,s.jsx)(n.td,{children:"\u2705 Supported"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"macOS Arm64"}),(0,s.jsx)(n.td,{children:"\u2705 Supported"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Browser"}),(0,s.jsx)(n.td,{children:"\u274c Not Supported"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Application Structure"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use MVVM pattern consistently"}),"\n",(0,s.jsx)(n.li,{children:"Minimize reflection usage"}),"\n",(0,s.jsx)(n.li,{children:"Prefer compile-time configuration"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Resource Management"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use static resources when possible"}),"\n",(0,s.jsx)(n.li,{children:"Bundle all required assets"}),"\n",(0,s.jsx)(n.li,{children:"Implement proper cleanup in IDisposable"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Performance Optimization"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Enable binding compilation"}),"\n",(0,s.jsx)(n.li,{children:"Use compiled bindings"}),"\n",(0,s.jsx)(n.li,{children:"Implement proper virtualization for large collections"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia.Samples",children:"Avalonia Sample Applications with Native AOT"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>r});var l=i(96540);const s={},o=l.createContext(s);function t(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(o.Provider,{value:n},e.children)}}}]);