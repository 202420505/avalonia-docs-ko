"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[5331],{8793:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"concepts/the-mvvm-pattern/avalonia-ui-and-mvvm","title":"Avalonia UI and MVVM","description":"CONCEPTS - The MVVM Pattern","source":"@site/docs/concepts/the-mvvm-pattern/avalonia-ui-and-mvvm.md","sourceDirName":"concepts/the-mvvm-pattern","slug":"/concepts/the-mvvm-pattern/avalonia-ui-and-mvvm","permalink":"/avalonia-docs-ko/docs/concepts/the-mvvm-pattern/avalonia-ui-and-mvvm","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/concepts/the-mvvm-pattern/avalonia-ui-and-mvvm.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755603059000,"frontMatter":{"description":"CONCEPTS - The MVVM Pattern"},"sidebar":"documentationSidebar","previous":{"title":"The MVVM Pattern","permalink":"/avalonia-docs-ko/docs/concepts/the-mvvm-pattern/"},"next":{"title":"Markup Extensions","permalink":"/avalonia-docs-ko/docs/concepts/markupextensions"}}');var i=t(74848),a=t(28453);const s=t.p+"assets/images/mvvm-22304837aa64469743c8084694f0238e.png",r={description:"CONCEPTS - The MVVM Pattern"},d="Avalonia UI and MVVM",l={},c=[{value:"Views and View Models",id:"views-and-view-models",level:2},{value:"Data Binding",id:"data-binding",level:2},{value:"The MVVM Model",id:"the-mvvm-model",level:2},{value:"ReactiveUI",id:"reactiveui",level:2}];function h(e){const n={a:"a",admonition:"admonition",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"avalonia-ui-and-mvvm",children:"Avalonia UI and MVVM"})}),"\n",(0,i.jsxs)(n.p,{children:["On this page you will learn how the MVVM pattern is realised when used with ",(0,i.jsx)(n.em,{children:"Avalonia UI"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"views-and-view-models",children:"Views and View Models"}),"\n",(0,i.jsxs)(n.p,{children:["When you use the MVVM pattern with ",(0,i.jsx)(n.em,{children:"Avalonia UI"}),", you implement a view with an AXAML file, attached to a corresponding code-behind file, and a view model with a plain-old code class file."]}),"\n",(0,i.jsxs)(n.p,{children:["In ",(0,i.jsx)(n.em,{children:"Avalonia UI"}),", a view is implemented as a composition of UI elements in a window or a user control (both AXAML files with code-behind). The UI elements in a composition can be a mixture of ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," built-in controls, user controls and (more advanced) controls of your own design and implementation."]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["For a full list of the ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," built-in controls, see the reference section ",(0,i.jsx)(n.a,{href:"../../reference/controls/",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["To learn more about the concept of UI composition, see ",(0,i.jsx)(n.a,{href:"/avalonia-docs-ko/docs/concepts/ui-composition",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["To learn how to design and implement your own controls, see ",(0,i.jsx)(n.a,{href:"/avalonia-docs-ko/docs/guides/custom-controls/how-to-create-a-custom-controls-library",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"data-binding",children:"Data Binding"}),"\n",(0,i.jsxs)(n.p,{children:["Data binding is the key technology that allows an ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," MVVM application to separate views from view models. You can visualise the view to view model relationship as two layers connected by the data bindings:"]}),"\n",(0,i.jsx)("img",{src:s,alt:""}),"\n",(0,i.jsx)(n.p,{children:"Notice how some of the data bindings are represented by a two way arrow and others by a single-headed arrow. For example, the name and address inputs are two ways - you want both changes in the view model to be notified to the view, and for inputs to the view to be updated on the view model."}),"\n",(0,i.jsx)(n.p,{children:"The buttons however have one-direction commands, issued by the view and acted out by the view model."}),"\n",(0,i.jsxs)(n.p,{children:["Notice how the view model class is not dependent on the view layer, or how it will be rendered on the target platform by ",(0,i.jsx)(n.em,{children:"Avalonia UI"}),". Because the view model class is independent, it can be unit tested like any other code."]}),"\n",(0,i.jsx)(n.p,{children:"When you use the MVVM pattern in practice, you will use a corresponding view model for each view, and the view model class contains all the application logic for the view."}),"\n",(0,i.jsx)(n.h2,{id:"the-mvvm-model",children:"The MVVM Model"}),"\n",(0,i.jsx)(n.p,{children:"The model is the other part of the MVVM pattern. Models are much less precisely defined in the pattern as they represent 'the rest of the architecture'. This is often data storage or other services."}),"\n",(0,i.jsx)(n.p,{children:"The important principle for you to maintain is separation. You should implement the relationship between view model and model using some form of the Dependency Injection (DI) pattern."}),"\n",(0,i.jsx)(n.h2,{id:"reactiveui",children:"ReactiveUI"}),"\n",(0,i.jsx)(n.p,{children:"There are a number of frameworks designed to help write applications using the MVVM pattern."}),"\n",(0,i.jsxs)(n.p,{children:["In the following pages, you will learn about the ",(0,i.jsx)(n.em,{children:"ReactiveUI"})," framework which is one of the most popular and is supported by one of the ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," packages."]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var o=t(96540);const i={},a=o.createContext(i);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);