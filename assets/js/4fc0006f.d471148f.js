"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[9256],{35545:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"reference/controls/tray-icon","title":"TrayIcon","description":"REFERENCE - Built-in Controls","source":"@site/docs/reference/controls/tray-icon.md","sourceDirName":"reference/controls","slug":"/reference/controls/tray-icon","permalink":"/avalonia-docs-ko/docs/reference/controls/tray-icon","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/reference/controls/tray-icon.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755602100000,"frontMatter":{"title":"TrayIcon","description":"REFERENCE - Built-in Controls"},"sidebar":"documentationSidebar","previous":{"title":"TransitioningContentControl","permalink":"/avalonia-docs-ko/docs/reference/controls/transitioningcontentcontrol"},"next":{"title":"TreeDataGrid","permalink":"/avalonia-docs-ko/docs/reference/controls/treedatagrid/"}}');var i=o(74848),r=o(28453);const s=o.p+"assets/images/trayicon-d8a8cc33e65cfcc0df262be2a196793a.gif",a={title:"TrayIcon",description:"REFERENCE - Built-in Controls"},c="TrayIcon",l={},d=[{value:"Overview",id:"overview",level:2},{value:"Useful Properties",id:"useful-properties",level:2},{value:"Example",id:"example",level:2},{value:"More Information",id:"more-information",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"trayicon",children:"TrayIcon"})}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TrayIcon"})," allows an ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," application to display an icon and a native menu in the system tray. It is supported on ",(0,i.jsx)(n.em,{children:"Windows"}),", ",(0,i.jsx)(n.em,{children:"macOS"})," and some ",(0,i.jsx)(n.em,{children:"Linux"})," distributions (it is confirmed to work on ",(0,i.jsx)(n.em,{children:"Ubuntu"}),")."]}),"\n",(0,i.jsx)(n.p,{children:"You must define a tray menu in the application XAML file."}),"\n",(0,i.jsx)(n.h2,{id:"useful-properties",children:"Useful Properties"}),"\n",(0,i.jsx)(n.p,{children:"You will probably use these properties most often:"}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("th",{width:"255",children:"Property"}),(0,i.jsx)("th",{children:"Description"})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"Icon"})}),(0,i.jsx)("td",{children:"The icon to display in the system tray. Typically loaded from the application assets."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"ToolTipText"})}),(0,i.jsx)("td",{children:"Tool tip text displayed when the user hovers over the tray icon."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:"TrayIcon.Menu"}),(0,i.jsxs)("td",{children:["The ",(0,i.jsx)("strong",{children:"native menu"})," control attached to the tray icon."]})]})]})]}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["You must use a ",(0,i.jsx)(n.strong,{children:"native menu"})," with the tray icon, and not the ",(0,i.jsx)(n.em,{children:"Avalonia UI"})," menu control. For full details about the native menu, see the reference ",(0,i.jsx)(n.a,{href:"./nativemenu",children:"here"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsxs)(n.p,{children:["This example defines a simple tray icon menu in the ",(0,i.jsx)(n.code,{children:"App.xaml"})," file :"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Application xmlns="https://github.com/avaloniaui"\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n             x:Class="MyApplication.App">\n  <TrayIcon.Icons>\n    <TrayIcons>\n      <TrayIcon Icon="/Assets/avalonia-logo.ico" \n                ToolTipText="Avalonia Tray Icon ToolTip">\n        <TrayIcon.Menu>\n          <NativeMenu>\n            <NativeMenuItem Header="Settings">\n              <NativeMenu>\n                <NativeMenuItem Header="Option 1"   />\n                <NativeMenuItem Header="Option 2"   />\n                <NativeMenuItemSeparator />\n                <NativeMenuItem Header="Option 3"  />\n              </NativeMenu>\n            </NativeMenuItem>\n          </NativeMenu>\n        </TrayIcon.Menu>\n      </TrayIcon>\n    </TrayIcons>\n  </TrayIcon.Icons>\n</Application>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Include the ",(0,i.jsx)(n.code,{children:".ico"})," file in the ",(0,i.jsx)(n.code,{children:".csproj"})," file using an ",(0,i.jsx)(n.code,{children:"AvaloniaResource"})," item:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<Project Sdk="Microsoft.NET.Sdk">\n  <ItemGroup>\n    <AvaloniaResource Include="Assets/avalonia-logo.ico" />\n  </ItemGroup>\n</Project>\n'})}),"\n",(0,i.jsx)("img",{src:s,alt:""}),"\n",(0,i.jsx)(n.h2,{id:"more-information",children:"More Information"}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"For the complete API documentation about this control, see here."})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["View the source code on GitHub ",(0,i.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/TrayIcon.cs",children:(0,i.jsx)(n.code,{children:"TrayIcon.cs"})})]})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var t=o(96540);const i={},r=t.createContext(i);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);