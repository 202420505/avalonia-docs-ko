"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[8704],{20828:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"reference/gestures/scrollgesturerecognizer","title":"ScrollGestureRecognizer","description":"REFERENCE - Gestures","source":"@site/docs/reference/gestures/scrollgesturerecognizer.md","sourceDirName":"reference/gestures","slug":"/reference/gestures/scrollgesturerecognizer","permalink":"/avalonia-docs-ko/docs/reference/gestures/scrollgesturerecognizer","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/reference/gestures/scrollgesturerecognizer.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755671977000,"frontMatter":{"description":"REFERENCE - Gestures"},"sidebar":"documentationSidebar","previous":{"title":"PullGestureRecognizer","permalink":"/avalonia-docs-ko/docs/reference/gestures/pullgesturerecognizer"},"next":{"title":"Reference","permalink":"/avalonia-docs-ko/docs/reference/"}}');var s=n(74848),o=n(28453);const l={description:"REFERENCE - Gestures"},c="ScrollGestureRecognizer",i={},a=[{value:"Using a ScrollGestureRecognizer",id:"using-a-scrollgesturerecognizer",level:2},{value:"Binding Events",id:"binding-events",level:2},{value:"Useful Properties",id:"useful-properties",level:2},{value:"More Information",id:"more-information",level:2}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"scrollgesturerecognizer",children:"ScrollGestureRecognizer"})}),"\n",(0,s.jsx)(r.p,{children:"A gesture recognizer that tracks a scrolling gesture. This can be attached to a control to detect when a pointer moves in a specific direction inside the control's bounds. This is especially useful when a control pans its contents, either horizontally, vertically or both."}),"\n",(0,s.jsx)(r.h2,{id:"using-a-scrollgesturerecognizer",children:"Using a ScrollGestureRecognizer"}),"\n",(0,s.jsxs)(r.p,{children:["A ScrollGestureRecognizer can be attached to a control using the control's ",(0,s.jsx)(r.code,{children:"GestureRecognizers"})," property."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-xml",children:'<Image Stretch="UniformToFill"\n        Margin="5"\n        Name="image"\n        Source="/image.jpg">\n  <Image.GestureRecognizers>\n    <ScrollGestureRecognizer CanHorizontallyScroll="True"\n                              CanVerticallyScroll="True"/>\n  </Image.GestureRecognizers>\n</Image>\n'})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",metastring:"title='C#'",children:"image.GestureRecognizers.Add(new ScrollGestureRecognizer()\n{\n    CanVerticallyScroll = true,\n    CanHorizontallyScroll = true,\n});\n"})}),"\n",(0,s.jsxs)(r.p,{children:["The ScrollGestureRecognizer raises a ",(0,s.jsx)(r.code,{children:"Gestures.ScrollGestureEvent"})," when it detects the start of a scroll gesture. When the scroll ends, from the pointer being released or another gesture start, it raises a ",(0,s.jsx)(r.code,{children:"Gestures.ScrollGestureEndedEvent"}),"."]}),"\n",(0,s.jsx)(r.h2,{id:"binding-events",children:"Binding Events"}),"\n",(0,s.jsx)(r.p,{children:"After the ScrollGestureRecognizer has been added to your control, you need to bind them in your code behind either through an inline handler or to an event function:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",metastring:"title='C#'",children:"image.AddHandler(Gestures.ScrollGestureEvent, (s, e) => { });\nimage.AddHandler(Gestures.ScrollGestureEndedEvent, (s, e) => { });\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",metastring:"title='C#'",children:"image.AddHandler(Gestures.ScrollGestureEvent, Image_ScrollGesture);\nimage.AddHandler(Gestures.ScrollGestureEndedEvent, Image_ScrollGestureEnded);\n...\nprivate void Image_ScrollGesture(object? sender, ScrollGestureEventArgs e) { }\nprivate void Image_ScrollGestureEnded(object? sender, ScrollGestureEndedEventArgs e) { }\n"})}),"\n",(0,s.jsx)(r.p,{children:"If your event handles the gesture completely, you can mark the event as handled by setting:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-csharp",metastring:"title='C#'",children:"e.Handled = true;\n"})}),"\n",(0,s.jsx)(r.h2,{id:"useful-properties",children:"Useful Properties"}),"\n",(0,s.jsx)(r.p,{children:"You will probably use these properties most often:"}),"\n",(0,s.jsxs)("table",{children:[(0,s.jsx)("thead",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"266",children:"Property"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"CanVerticallyScroll"}),(0,s.jsx)("td",{children:"Defines whether the content can be scrolled vertically. "})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:"CanHorizontallyScroll"}),(0,s.jsx)("td",{children:"Defines whether the content can be scrolled horizontally. "})]})]})]}),"\n",(0,s.jsx)(r.h2,{id:"more-information",children:"More Information"}),"\n",(0,s.jsx)(r.admonition,{type:"info",children:(0,s.jsxs)(r.p,{children:["For the complete API documentation about this gesture recognizer, see ",(0,s.jsx)(r.a,{href:"https://api-docs.avaloniaui.net/docs/T_Avalonia_Input_GestureRecognizers_ScrollGestureRecognizer",children:"here"}),"."]})}),"\n",(0,s.jsx)(r.admonition,{type:"info",children:(0,s.jsxs)(r.p,{children:["View the source code on ",(0,s.jsx)(r.em,{children:"GitHub"})," ",(0,s.jsx)(r.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/GestureRecognizers/ScrollGestureRecognizer.cs",children:(0,s.jsx)(r.code,{children:"ScrollGestureRecognizer.cs"})})]})})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var t=n(96540);const s={},o=t.createContext(s);function l(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);