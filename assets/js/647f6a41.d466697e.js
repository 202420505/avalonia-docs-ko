"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[2248],{85484:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"reference/controls/nativemenu","title":"NativeMenu","description":"REFERENCE - Built-in Controls","source":"@site/docs/reference/controls/nativemenu.md","sourceDirName":"reference/controls","slug":"/reference/controls/nativemenu","permalink":"/avalonia-docs-ko/docs/reference/controls/nativemenu","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/reference/controls/nativemenu.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755672260000,"frontMatter":{"title":"NativeMenu","description":"REFERENCE - Built-in Controls"},"sidebar":"documentationSidebar","previous":{"title":"Menu","permalink":"/avalonia-docs-ko/docs/reference/controls/menu"},"next":{"title":"NumericUpDown","permalink":"/avalonia-docs-ko/docs/reference/controls/numericupdown"}}');var a=t(74848),r=t(28453);const o={title:"NativeMenu",description:"REFERENCE - Built-in Controls"},s="NativeMenu",l={},c=[{value:"Useful Properties",id:"useful-properties",level:2},{value:"Example",id:"example",level:2},{value:"Example",id:"example-1",level:2},{value:"Gesture Format",id:"gesture-format",level:3},{value:"Example",id:"example-2",level:2},{value:"More Information",id:"more-information",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"nativemenu",children:"NativeMenu"})}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"NativeMenu"})," can display a menu on ",(0,a.jsx)(n.em,{children:"macOS"})," and some Linux distributions."]}),"\n",(0,a.jsxs)(n.p,{children:["You can create sub-menus by nesting ",(0,a.jsx)(n.code,{children:"<MenuItem>"})," elements."]}),"\n",(0,a.jsxs)(n.p,{children:["You can add menu separator lines by including a ",(0,a.jsx)(n.code,{children:"<NativeMenuItemSeparator>"})," element or by adding a menu item with its header set to the minus sign, like this:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<NativeMenuItemSeparator Header="-" />\n'})}),"\n",(0,a.jsx)(n.h2,{id:"useful-properties",children:"Useful Properties"}),"\n",(0,a.jsx)(n.p,{children:"You will probably use these properties most often:"}),"\n",(0,a.jsxs)("table",{children:[(0,a.jsx)("thead",{children:(0,a.jsxs)("tr",{children:[(0,a.jsx)("th",{width:"204",children:"Property"}),(0,a.jsx)("th",{children:"Description"})]})}),(0,a.jsxs)("tbody",{children:[(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:"Header"})}),(0,a.jsx)("td",{children:"The menu caption."})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:"Command"})}),(0,a.jsx)("td",{children:"A command to execute when the user clicks the menu item."})]}),(0,a.jsxs)("tr",{children:[(0,a.jsx)("td",{children:(0,a.jsx)("code",{children:"Gesture"})}),(0,a.jsx)("td",{children:"The keyboard shortcut to associated with the menu item."})]})]})]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"This example modifies the default application menu in macOS."}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Changing the application's ",(0,a.jsx)(n.code,{children:"Name"})," property will cause the application menu header to change. In this example, it is set to ",(0,a.jsx)(n.em,{children:"Sample Application"}),"."]})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{src:"https://github.com/user-attachments/assets/d30bab47-f133-4f79-9bdb-d4fb4569ed61",alt:"image"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<Application xmlns="https://github.com/avaloniaui"\n             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"\n             x:Class="NativeMenuTest.App"\n             xmlns:local="using:NativeMenuTest"\n             RequestedThemeVariant="Default"\n             Name="Sample Application">\n             \x3c!-- "Default" ThemeVariant follows system theme variant. "Dark" or "Light" are other available options. --\x3e\n\n    <Application.DataTemplates>\n        <local:ViewLocator/>\n    </Application.DataTemplates>\n\n    <NativeMenu.Menu>\n        <NativeMenu>\n            <NativeMenuItem Header="About This Application\u2026" Click="AppAbout_OnClick" />\n            <NativeMenuItem Header="Preferences\u2026" Click="AppPreferences_OnClick" />\n        </NativeMenu>\n    </NativeMenu.Menu>\n  \n    <Application.Styles>\n        <FluentTheme />\n    </Application.Styles>\n</Application>\n'})}),"\n",(0,a.jsx)(n.p,{children:"You will also have to add the appropriate event handlers in the code-behind."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"private void AppAbout_OnClick(object? sender, System.EventArgs args) {\n\n}\n\nprivate void AppPreferences_OnClick(object? sender, System.EventArgs args) {\n    \n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"example-1",children:"Example"}),"\n",(0,a.jsxs)(n.p,{children:["This example adds a ",(0,a.jsx)(n.em,{children:"File"})," menu and an ",(0,a.jsx)(n.em,{children:"Edit"})," menu. For context regarding where in the XAML the ",(0,a.jsx)(n.code,{children:"NativeMenu.Menu"})," element should go, other XML tags are included but are missing attributes necessary for the application to function for brevity."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-Xml",children:'<Window>\n    <Design.DataContext />\n\n    <NativeMenu.Menu>\n        <NativeMenu>\n            <NativeMenuItem Header="File" IsVisible="true">\n                <NativeMenu>                    \n                    <NativeMenuItem Header="Open\u2026" Click="FileOpen_OnClick" Gesture="Meta+O" />\n                    <NativeMenuItem Header="Save As\u2026" Click="FileSaveAs_OnClick" Gesture="Meta+Shift+S" />\n                    <NativeMenuItem Header="Save As\u2026" Click="FileSaveAs_OnClick" Gesture="Meta+A" />\n                </NativeMenu>\n            </NativeMenuItem>\n            <NativeMenuItem Header="Edit" IsEnabled="true">\n                <NativeMenu>\n                    <NativeMenuItem Header="Cut" Command="{Binding CutCommand}" Gesture="Meta+X" />\n                    <NativeMenuItem Header="Copy" Command="{Binding CopyCommand}" Gesture="Meta+C" />\n                    <NativeMenuItem Header="Past" Command="{Binding PasteCommand}" Gesture="Meta+V" />\n                </NativeMenu>\n            </NativeMenuItem>\n        </NativeMenu>\n    </NativeMenu.Menu>\n\n    <TextBlock Text="{Binding Greeting}" HorizontalAlignment="Center" VerticalAlignment="Center"/>\n\n</Window>\n'})}),"\n",(0,a.jsx)(n.p,{children:"In the view-model, you would then add the command functions:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-C#",children:"public void CutCommand() { }\n\npublic void CopyCommand() { }\n\npublic void PasteCommand() { }\n"})}),"\n",(0,a.jsx)(n.h3,{id:"gesture-format",children:"Gesture Format"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Gesture"})," attribute is a ",(0,a.jsx)(n.code,{children:"+"}),"-delimited list of key modifiers following by a ",(0,a.jsx)(n.code,{children:"+"}),", then followed by a single key character (which itself may be ",(0,a.jsx)(n.code,{children:"+"}),"). Permissible modifiers include ",(0,a.jsx)(n.code,{children:"Alt"}),", ",(0,a.jsx)(n.code,{children:"Control"}),", ",(0,a.jsx)(n.code,{children:"Shift"}),", and ",(0,a.jsx)(n.code,{children:"Meta"}),". If the ",(0,a.jsx)(n.code,{children:"Gesture"})," attribute is the empty string or contains only a single key character, no exception will be thrown but the gesture will not activate the menu item. If a key modifier is provided without a key, or if the attribute value isn't formatted correctly, an ",(0,a.jsx)(n.code,{children:"ArgumentException"})," will be thrown. For more details, see the source code for ",(0,a.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/KeyGesture.cs",children:(0,a.jsx)(n.code,{children:"KeyGesture"})}),", ",(0,a.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/Key.cs",children:(0,a.jsx)(n.code,{children:"Key"})}),", and ",(0,a.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Base/Input/IKeyboardDevice.cs",children:(0,a.jsx)(n.code,{children:"KeyModifier"})}),"."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Note that the menu item will not be enabled without either a code-behind ",(0,a.jsx)(n.code,{children:"Click"})," event handler or a function bound using the ",(0,a.jsx)(n.code,{children:"Command"})," attribute."]})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["Note that on macOS, a menu bar-level ",(0,a.jsx)(n.code,{children:"NativeMenuItem"})," with the header ",(0,a.jsx)(n.code,{children:"Edit"})," will include some additional macOS features by default."]})}),"\n",(0,a.jsx)(n.h2,{id:"example-2",children:"Example"}),"\n",(0,a.jsx)(n.p,{children:"This example defines a native menu that can be attached to a tray icon:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-xml",children:'<NativeMenu>\n  <NativeMenuItem Header="Settings">\n    <NativeMenu>\n      <NativeMenuItem Header="Option 1"   />\n      <NativeMenuItem Header="Option 2"   />\n      <NativeMenuItemSeparator />\n      <NativeMenuItem Header="Option 3"  />\n    </NativeMenu>\n  </NativeMenuItem>\n</NativeMenu>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"more-information",children:"More Information"}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["For the complete API documentation about this control, see ",(0,a.jsx)(n.a,{href:"https://api-docs.avaloniaui.net/docs/T_Avalonia_Controls_NativeMenu",children:"here"}),"."]})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsxs)(n.p,{children:["View the source code on GitHub ",(0,a.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/NativeMenu.cs",children:"NativeMenu.cs"})]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>s});var i=t(96540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);