"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[7052],{36681:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"reference/controls/buttons/button","title":"Button","description":"REFERENCE - Built-in Controls","source":"@site/docs/reference/controls/buttons/button.md","sourceDirName":"reference/controls/buttons","slug":"/reference/controls/buttons/button","permalink":"/avalonia-docs-ko/docs/reference/controls/buttons/button","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/reference/controls/buttons/button.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755590087000,"frontMatter":{"title":"Button","description":"REFERENCE - Built-in Controls"},"sidebar":"documentationSidebar","previous":{"title":"Button Controls","permalink":"/avalonia-docs-ko/docs/reference/controls/buttons/"},"next":{"title":"ButtonSpinner","permalink":"/avalonia-docs-ko/docs/reference/controls/buttons/buttonspinner"}}');var s=t(74848),i=t(28453);const r=t.p+"assets/images/button-click-f878fc8349bc666ba471d42150139251.gif",c={title:"Button",description:"REFERENCE - Built-in Controls"},a="Button",l={},d=[{value:"Useful Properties",id:"useful-properties",level:2},{value:"Example",id:"example",level:2},{value:"More Information",id:"more-information",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"button",children:"Button"})}),"\n",(0,s.jsx)(n.p,{children:"The button is a control that reacts to pointer actions (and has some keyboard equivalents). It presents visual feedback in the form of a depressed state when the pointer is down."}),"\n",(0,s.jsx)(n.p,{children:"A pointer-down to pointer release sequence is interpreted as a click; and this behaviour is configurable."}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsxs)(n.p,{children:["When determining if a button is pressed by the user, always use the ",(0,s.jsx)(n.code,{children:"Click"})," event instead of ",(0,s.jsx)(n.code,{children:"PointerPressed"}),". ",(0,s.jsx)(n.code,{children:"Click"})," is the high-level event specific to a ",(0,s.jsx)(n.code,{children:"Button"})," that indicates it has been pressed."]}),(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"PointerPressed"})," is more a low-level input event: one that the ",(0,s.jsx)(n.code,{children:"Button"})," needs to handle internally to raise the ",(0,s.jsx)(n.code,{children:"Click"})," event. Since ",(0,s.jsx)(n.code,{children:"Button"})," handles ",(0,s.jsx)(n.code,{children:"PointerPressed"})," (sets ",(0,s.jsx)(n.code,{children:"IsHandled"})," to true), applications will never receive this event as in some other controls."]})]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Click is one of many button events, for a full list see ",(0,s.jsx)(n.a,{href:"https://api-docs.avaloniaui.net/docs/T_Avalonia_Controls_Button#events",children:"here"}),"."]})}),"\n",(0,s.jsxs)(n.p,{children:["A button can raise a click event in the code-behind. Alternatively you can bind an instance of ",(0,s.jsx)(n.code,{children:"ICommand"})," to the command property. The bound command will then be executed whenever the button is clicked."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["For guidance on how to bind to a command, see ",(0,s.jsx)(n.a,{href:"../../../basics/user-interface/adding-interactivity",children:"here"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"useful-properties",children:"Useful Properties"}),"\n",(0,s.jsx)(n.p,{children:"You will probably use these properties most often:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ClickMode"})}),(0,s.jsx)(n.td,{children:"Describes how the button should react to clicks."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Command"})}),(0,s.jsxs)(n.td,{children:["An instance of ",(0,s.jsx)(n.code,{children:"ICommand"})," to be invoked when the button is clicked."]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,s.jsx)(n.p,{children:"This example shows a simple button and a C# code-behind click event handler."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<StackPanel Margin="20">\n  <Button Click="ClickHandler">Press Me!</Button>\n  <TextBlock Margin="0 10" x:Name="message">Ready...</TextBlock>\n</StackPanel>\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",metastring:"title='C#'",children:'public partial class MainWindow : Window\n{\n    public MainWindow()\n    {\n        InitializeComponent();\n    }\n\n    public void ClickHandler(object sender, RoutedEventArgs args)\n    {\n        message.Text = "Button clicked!";\n    }\n}\n'})}),"\n",(0,s.jsx)("img",{src:r,alt:""}),"\n",(0,s.jsx)(n.h2,{id:"more-information",children:"More Information"}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["For the complete API documentation about this control, see ",(0,s.jsx)(n.a,{href:"https://api-docs.avaloniaui.net/docs/T_Avalonia_Controls_Button",children:"here"}),"."]})}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["View the source code on ",(0,s.jsx)(n.em,{children:"GitHub"})," ",(0,s.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/Button.cs",children:(0,s.jsx)(n.code,{children:"Button.cs"})})]})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var o=t(96540);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);