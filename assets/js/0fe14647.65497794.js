"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[7722],{307:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"get-started/test-drive/input-controls","title":"Input Controls","description":"On this page, you will learn how to add input controls and arrange them in a neatly aligned layout. The aim is to add","source":"@site/docs/get-started/test-drive/input-controls.md","sourceDirName":"get-started/test-drive","slug":"/get-started/test-drive/input-controls","permalink":"/avalonia-docs-ko/docs/get-started/test-drive/input-controls","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/get-started/test-drive/input-controls.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755671977000,"frontMatter":{"id":"input-controls","title":"Input Controls"},"sidebar":"documentationSidebar","previous":{"title":"Add Some Layout","permalink":"/avalonia-docs-ko/docs/get-started/test-drive/add-some-layout"},"next":{"title":"The Design Preview","permalink":"/avalonia-docs-ko/docs/get-started/test-drive/the-design-preview"}}');var o=t(74848),r=t(28453),s=t(29030);const l={id:"input-controls",title:"Input Controls"},a=void 0,d={},c=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components},{ThemedImage:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("ThemedImage",!0),(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"On this page, you will learn how to add input controls and arrange them in a neatly aligned layout. The aim is to add\nnumerical inputs with labels and an output control following in the row below."}),"\n",(0,o.jsxs)(n.p,{children:["To achieve this layout, you will use the built-in ",(0,o.jsx)(n.code,{children:"Grid"})," control to create cells and assign our controls to those cells."]}),"\n",(0,o.jsx)(n.p,{children:"The following picture shows the finished application at runtime with the gridlines showing for layout visualization purposes. Normally,\nthese are invisible on a production UI."}),"\n",(0,o.jsx)(t,{alt:"Temperature StackPanel",className:"center",sources:{light:(0,s.Ay)("/img/get-started/test-drive/input-controls-light.png"),dark:(0,s.Ay)("/img/get-started/test-drive/input-controls-dark.png")}}),"\n",(0,o.jsxs)(n.p,{children:["To create a layout using the ",(0,o.jsx)(n.code,{children:"Grid"})," control with 2 columns and 3 rows, follow this procedure:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Stop the app if it is running."}),"\n",(0,o.jsxs)(n.li,{children:["Locate the empty line in the XAML between ",(0,o.jsx)(n.code,{children:"<Border>"})," and ",(0,o.jsx)(n.code,{children:"<Button>"})]}),"\n",(0,o.jsxs)(n.li,{children:["Insert a ",(0,o.jsx)(n.code,{children:"<Grid>"})," tag as shown:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<StackPanel>\n    <Border Margin="5" CornerRadius="10" Background="LightBlue">\n        <TextBlock Margin="5"\n            HorizontalAlignment="Center"\n            FontSize="24"\n            Text="Temperature Converter" />\n    </Border>\n    // highlight-start\n    <Grid ShowGridLines="True" Margin="5" \n          ColumnDefinitions="120, 100"\n          RowDefinitions="Auto, Auto, Auto">\n    </Grid>\n    // highlight-end\n    <Button HorizontalAlignment="Center">Calculate</Button>\n</StackPanel>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["This assigns the number of rows and columns, their sizes, and makes the gridlines visible. Currently, it will show as a\nstraight line because the grid cells are empty. The ",(0,o.jsx)(n.code,{children:"Auto"})," rows size to their content and will have zero height until\ncontent is added."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Add ",(0,o.jsx)(n.code,{children:"<Label>"})," and ",(0,o.jsx)(n.code,{children:"<TextBox>"})," (text input) controls to the ",(0,o.jsx)(n.code,{children:"Grid"}),"'s children as shown:"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<Grid ShowGridLines="True" Margin="5"\n      ColumnDefinitions="120, 100" \n      RowDefinitions="Auto, Auto, Auto">\n    // highlight-start\n    <Label Grid.Row="0" Grid.Column="0">Celsius</Label>\n    <TextBox Grid.Row="0" Grid.Column="1"/>\n    <Label Grid.Row="1" Grid.Column="0">Fahrenheit</Label>\n    <TextBox Grid.Row="1"  Grid.Column="1"/>\n    // highlight-end\n</Grid>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["To complete the layout, tidy up the alignment of the controls in the ",(0,o.jsx)(n.code,{children:"Grid"})," using their ",(0,o.jsx)(n.code,{children:"Margin"})," property. Also, move\nthe ",(0,o.jsx)(n.code,{children:"Button"})," inside the ",(0,o.jsx)(n.code,{children:"Grid"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-xml",children:'<Grid ShowGridLines="True"  Margin="5" \n      ColumnDefinitions="120, 100" \n      RowDefinitions="Auto, Auto, Auto">\n    // highlight-start\n    <Label Grid.Row="0" Grid.Column="0" Margin="10">Celsius</Label>\n    <TextBox Grid.Row="0" Grid.Column="1" Margin="0 5" Text="0"/>\n    <Label Grid.Row="1" Grid.Column="0" Margin="10">Fahrenheit</Label>\n    <TextBox Grid.Row="1"  Grid.Column="1" Margin="0 5" Text="0"/>\n    <Button Grid.Row="2"  Grid.Column="1">Calculate</Button>\n    // highlight-end\n</Grid>\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Run the app to see the result"}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsxs)(n.p,{children:["For full information about the complete range of Avalonia built-in controls, and their attributes, see the reference section ",(0,o.jsx)(n.a,{href:"../../reference/controls/",children:"here"}),"."]})}),"\n",(0,o.jsx)(n.p,{children:"On the next page, you will see how to improve your design-time experience by adjusting the size window when it is shown in the preview pane."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var i=t(96540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);