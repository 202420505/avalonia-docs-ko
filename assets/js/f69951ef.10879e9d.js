"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[6750],{84435:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"overview/what-is-avalonia","title":"What is Avalonia?","description":"Avalonia is an open-source, cross-platform UI framework that enables developers to create application using .NET for Windows, macOS, Linux, iOS, Android and WebAssembly.","source":"@site/docs/overview/what-is-avalonia.md","sourceDirName":"overview","slug":"/overview/what-is-avalonia","permalink":"/avalonia-docs-ko/docs/overview/what-is-avalonia","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/overview/what-is-avalonia.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755603059000,"frontMatter":{"id":"what-is-avalonia","title":"What is Avalonia?"},"sidebar":"documentationSidebar","previous":{"title":"Welcome","permalink":"/avalonia-docs-ko/docs/welcome"},"next":{"title":"Supported Platforms","permalink":"/avalonia-docs-ko/docs/overview/supported-platforms"}}');var r=i(74848),s=i(28453);const t=i.p+"assets/images/Architecture-4860577d5373c89eca69c4178f70045b.png",o=i.p+"assets/images/MAUI-Comparision-c204b70483e3ecf4c9e00349d01503b8.png",l={id:"what-is-avalonia",title:"What is Avalonia?"},c=void 0,d={},h=[{value:"Who Avalonia is for?",id:"who-avalonia-is-for",level:2},{value:"How does Avalonia work?",id:"how-does-avalonia-work",level:2},{value:"Architecture Overview",id:"architecture-overview",level:3},{value:"Core Platform-Agnostic Layer",id:"core-platform-agnostic-layer",level:4},{value:"Rendering Engine",id:"rendering-engine",level:4},{value:"Platform Integration Layer",id:"platform-integration-layer",level:4},{value:"Runtime Environment",id:"runtime-environment",level:4},{value:"Comparison with Native Approaches",id:"comparison-with-native-approaches",level:4},{value:"Integration with Native Platforms",id:"integration-with-native-platforms",level:3},{value:"Platform Support Requirements",id:"platform-support-requirements",level:3}];function p(e){const n={h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Avalonia is an open-source, cross-platform UI framework that enables developers to create application using .NET for Windows, macOS, Linux, iOS, Android and WebAssembly."}),"\n",(0,r.jsx)(n.p,{children:"It uses its own rendering engine to draw UI controls, ensuring consistent appearance and behavior across all supported platforms. This means that developers can share their UI code and maintain a uniform look and feel regardless of the target platform."}),"\n",(0,r.jsx)("p",{children:(0,r.jsx)("img",{className:"image-zoom-medium",src:t,alt:""})}),"\n",(0,r.jsx)(n.h2,{id:"who-avalonia-is-for",children:"Who Avalonia is for?"}),"\n",(0,r.jsx)(n.p,{children:"Avalonia is for developers who want to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Write cross-platform apps in XAML and C#, from a single shared code-base."}),"\n",(0,r.jsx)(n.li,{children:"Share UI, layout and design across multiple platforms."}),"\n",(0,r.jsx)(n.li,{children:"Share code, tests, and business logic across platforms."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"how-does-avalonia-work",children:"How does Avalonia work?"}),"\n",(0,r.jsx)(n.p,{children:"Avalonia unifies desktop, mobile, and web platforms through a unique approach that differs from traditional cross-platform frameworks. Rather than wrapping native UI controls, Avalonia implements its own cross-platform rendering engine that ensures pixel-perfect consistency across all supported platforms."}),"\n",(0,r.jsx)(n.h3,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,r.jsx)(n.p,{children:"Avalonia is built on .NET Standard 2.0, allowing it to run on any platform that supports .NET. The framework consists of several key layers:"}),"\n",(0,r.jsx)(n.h4,{id:"core-platform-agnostic-layer",children:"Core Platform-Agnostic Layer"}),"\n",(0,r.jsx)(n.p,{children:"The majority of Avalonia's functionality resides in a platform-agnostic core layer that handles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"UI Controls and Layout"}),"\n",(0,r.jsx)(n.li,{children:"Visual Tree Management"}),"\n",(0,r.jsx)(n.li,{children:"Styling System"}),"\n",(0,r.jsx)(n.li,{children:"Data Binding"}),"\n",(0,r.jsx)(n.li,{children:"Input Handling"}),"\n",(0,r.jsx)(n.li,{children:"Animation Framework"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This core layer is completely platform-independent, meaning it behaves identically regardless of the operating system or device."}),"\n",(0,r.jsx)(n.h4,{id:"rendering-engine",children:"Rendering Engine"}),"\n",(0,r.jsx)(n.p,{children:"Unlike frameworks that rely on native UI controls, Avalonia uses its own rendering engine powered by either Skia or Direct2D. This approach means that:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Applications look and behave identically across platforms"}),"\n",(0,r.jsx)(n.li,{children:"Custom controls and visual effects can be implemented once and work everywhere"}),"\n",(0,r.jsx)(n.li,{children:"The framework isn't limited by platform-specific UI capabilities"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"platform-integration-layer",children:"Platform Integration Layer"}),"\n",(0,r.jsx)(n.p,{children:"Avalonia requires minimal platform-specific code to integrate with each supported platform. This layer handles:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Window Management"}),"\n",(0,r.jsx)(n.li,{children:"Input Events"}),"\n",(0,r.jsx)(n.li,{children:"Clipboard Operations"}),"\n",(0,r.jsx)(n.li,{children:"Native Dialogs"}),"\n",(0,r.jsx)(n.li,{children:"Hardware Acceleration"}),"\n",(0,r.jsx)(n.li,{children:"Platform-Specific Features"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"runtime-environment",children:"Runtime Environment"}),"\n",(0,r.jsx)(n.p,{children:"Avalonia applications run on the .NET runtime, whether that's .NET Core, or Mono."}),"\n",(0,r.jsx)(n.h4,{id:"comparison-with-native-approaches",children:"Comparison with Native Approaches"}),"\n",(0,r.jsx)(n.p,{children:"While frameworks like .NET MAUI abstract over native UI controls, Avalonia takes a different approach:"}),"\n",(0,r.jsx)("p",{children:(0,r.jsx)("img",{className:"image-zoom-medium",src:o,alt:""})}),"\n",(0,r.jsx)(n.p,{children:"This architectural difference provides several benefits:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Consistent behavior across platforms"}),"\n",(0,r.jsx)(n.li,{children:"Pixel-perfect rendering"}),"\n",(0,r.jsx)(n.li,{children:"Full control over the UI stack"}),"\n",(0,r.jsx)(n.li,{children:"Simplified platform support"}),"\n",(0,r.jsx)(n.li,{children:"Reduced maintenance overhead"}),"\n",(0,r.jsx)(n.li,{children:"Better performance on resource-constrained devices"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"integration-with-native-platforms",children:"Integration with Native Platforms"}),"\n",(0,r.jsx)(n.p,{children:"While Avalonia uses its own rendering engine, it still integrates seamlessly with native platform capabilities:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Windows"}),": Supports Win32 APIs and modern Windows features"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Linux"}),": Works with X11, Wayland, and framebuffer rendering"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"macOS"}),": Integrates with Cocoa and platform services"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mobile"}),": Provides native lifecycle management and platform integration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Web"}),": Runs via WebAssembly with full browser integration"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"platform-support-requirements",children:"Platform Support Requirements"}),"\n",(0,r.jsx)(n.p,{children:"At its core, Avalonia requires just two fundamental capabilities to support a new platform:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"The ability to draw pixels on a screen"}),"\n",(0,r.jsx)(n.li,{children:"The ability to receive input events"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This minimal requirement set is what allows Avalonia to support such a wide range of platforms, from desktop operating systems to embedded devices, and even unusual platforms like VNC servers."}),"\n",(0,r.jsx)(n.p,{children:'This architecture enables Avalonia to deliver on its promise of "One codebase, infinite possibilities" while maintaining high performance and native platform integration where it matters most.'})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>o});var a=i(96540);const r={},s=a.createContext(r);function t(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),a.createElement(s.Provider,{value:n},e.children)}}}]);