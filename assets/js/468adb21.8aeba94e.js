"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[9469],{40999:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"tutorials/music-store-app/return-from-dialog","title":"Dialog Return","description":"TUTORIALS - Music Store App","source":"@site/docs/tutorials/music-store-app/return-from-dialog.md","sourceDirName":"tutorials/music-store-app","slug":"/tutorials/music-store-app/return-from-dialog","permalink":"/docs/tutorials/music-store-app/return-from-dialog","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/tutorials/music-store-app/return-from-dialog.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755588461000,"frontMatter":{"description":"TUTORIALS - Music Store App"},"sidebar":"documentationSidebar","previous":{"title":"Displaying Images","permalink":"/docs/tutorials/music-store-app/displaying-images"},"next":{"title":"Add Items to the User\'s Collection","permalink":"/docs/tutorials/music-store-app/add-items-to-users-collection"}}');var i=s(74848),o=s(28453);const l={description:"TUTORIALS - Music Store App"},r="Dialog Return",a={},d=[{value:"Create the MusicStoreClosedMessage Class",id:"create-the-musicstoreclosedmessage-class",level:2},{value:"Register the Message Handler in MusicStoreWindow",id:"register-the-message-handler-in-musicstorewindow",level:2},{value:"Define the Command in MusicStoreViewModel",id:"define-the-command-in-musicstoreviewmodel",level:2},{value:"Bind the Command to the Button",id:"bind-the-command-to-the-button",level:2}];function c(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"dialog-return",children:"Dialog Return"})}),"\n",(0,i.jsxs)(n.p,{children:["On this page, you\u2019ll complete the logic for returning a selected album from the search dialog ",(0,i.jsx)(n.code,{children:"MusicStoreWindow"})," back to the main window. This will be done using the ",(0,i.jsx)(n.em,{children:"CommunityToolkit.Mvvm"})," messaging system, allowing the dialog to communicate back without tight coupling."]}),"\n",(0,i.jsx)(n.h2,{id:"create-the-musicstoreclosedmessage-class",children:"Create the MusicStoreClosedMessage Class"}),"\n",(0,i.jsx)(n.p,{children:"Firstly, let's create a message class that will carry the selected album from the dialog to the window handler."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["In the previously created ",(0,i.jsx)(n.strong,{children:"/Messages"})," folder add new class ",(0,i.jsx)(n.code,{children:"MusicStoreClosedMessage"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"In the newly created file add the following code:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"using Avalonia.MusicStore.ViewModels;\n\nnamespace Avalonia.MusicStore.Messages;\n\npublic class MusicStoreClosedMessage(AlbumViewModel selectedAlbum)\n{\n    public AlbumViewModel SelectedAlbum { get; } = selectedAlbum;\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"register-the-message-handler-in-musicstorewindow",children:"Register the Message Handler in MusicStoreWindow"}),"\n",(0,i.jsxs)(n.p,{children:["To close the dialog and return the selected album to the main window, you\u2019ll register a handler that listens for a ",(0,i.jsx)(n.code,{children:"MusicStoreClosedMessage"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate and open the ",(0,i.jsx)(n.strong,{children:"MusicStoreWindow.axaml.cs"})," file."]}),"\n",(0,i.jsx)(n.li,{children:"Add the following code to the constructor:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"using Avalonia.Controls;\nusing Avalonia.MusicStore.Messages;\nusing CommunityToolkit.Mvvm.Messaging;\n\nnamespace Avalonia.MusicStore.Views\n{\n    public partial class MusicStoreWindow : Window\n    {\n        public MusicStoreWindow()\n        {\n            InitializeComponent();\n\n            // Register a handler to listen for the message sent by the view model.\n            WeakReferenceMessenger.Default.Register<MusicStoreWindow, MusicStoreClosedMessage>(this,\n                static (window, message) =>\n                {\n                    // Close the dialog and return the selected album.\n                    window.Close(message.SelectedAlbum);\n                });\n        }\n    }\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["When ",(0,i.jsx)(n.code,{children:"MusicStoreViewModel"})," sends a ",(0,i.jsx)(n.code,{children:"MusicStoreClosedMessage"}),", this handler will close the dialog and return the selected album using Avalonia\u2019s dialog result system."]}),"\n",(0,i.jsx)(n.h2,{id:"define-the-command-in-musicstoreviewmodel",children:"Define the Command in MusicStoreViewModel"}),"\n",(0,i.jsxs)(n.p,{children:["Now you will add a relay command to the music store view model. You will bind this command to the ",(0,i.jsx)(n.strong,{children:"Buy Album"})," button on the music store view."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate and open the ",(0,i.jsx)(n.strong,{children:"MusicStoreViewModel.cs"})," file."]}),"\n",(0,i.jsx)(n.li,{children:"Add the following RelayCommand method to the class, as shown:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:"[RelayCommand]\nprivate void BuyMusic()\n{\n    if (SelectedAlbum != null)\n    {\n        WeakReferenceMessenger.Default.Send(new MusicStoreClosedMessage(SelectedAlbum));\n    }\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This command is exposed to the view as ",(0,i.jsx)(n.code,{children:"BuyMusicCommand"}),". When invoked, it sends a ",(0,i.jsx)(n.code,{children:"MusicStoreClosedMessage"})," with the currently selected album."]}),"\n",(0,i.jsx)(n.h2,{id:"bind-the-command-to-the-button",children:"Bind the Command to the Button"}),"\n",(0,i.jsxs)(n.p,{children:["Your next step is bind the ",(0,i.jsx)(n.strong,{children:"Buy Album"})," button to the relay command in the music store view model, follow this procedure:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Locate and open the ",(0,i.jsx)(n.strong,{children:"MusicStoreView.axaml"})," file."]}),"\n",(0,i.jsxs)(n.li,{children:["Add the data binding ",(0,i.jsx)(n.code,{children:'Command="{Binding BuyMusicCommand}"'})," to the button element."]}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Debug"})," to compile and run the project."]}),"\n",(0,i.jsx)(n.li,{children:"Click the icon button."}),"\n",(0,i.jsx)(n.li,{children:"Type some search text."}),"\n",(0,i.jsx)(n.li,{children:"Click an album to select it."}),"\n",(0,i.jsxs)(n.li,{children:["Click ",(0,i.jsx)(n.strong,{children:"Buy Album"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"You will see the dialog close, but nothing happens in the main window! On the next page you will learn how to add the selected album to a collection in the main window."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>r});var t=s(96540);const i={},o=t.createContext(i);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);