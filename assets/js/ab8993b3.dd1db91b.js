"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[3502],{47413:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"advanced/centralized-management","title":"Centralized Management","description":"If you\'re managing multiple XPF projects then it can be useful to centralize the management of your SDK versions and license keys.","source":"@site/xpf/advanced/centralized-management.md","sourceDirName":"advanced","slug":"/advanced/centralized-management","permalink":"/xpf/advanced/centralized-management","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/xpf/advanced/centralized-management.md","tags":[],"version":"current","frontMatter":{"id":"centralized-management","title":"Centralized Management"},"sidebar":"documentationSidebar","previous":{"title":"Accessing Avalonia Features","permalink":"/xpf/advanced/avalonia-interop"},"next":{"title":"Customizing Initialization","permalink":"/xpf/advanced/customizing-init"}}');var s=i(74848),a=i(28453);const c={id:"centralized-management",title:"Centralized Management"},r=void 0,o={},l=[{value:"Centralize XPF SDK Version",id:"centralize-xpf-sdk-version",level:2},{value:"License Keys",id:"license-keys",level:2},{value:"nuget.config",id:"nugetconfig",level:3},{value:".csproj Files",id:"csproj-files",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"If you're managing multiple XPF projects then it can be useful to centralize the management of your SDK versions and license keys."}),"\n",(0,s.jsx)(n.h2,{id:"centralize-xpf-sdk-version",children:"Centralize XPF SDK Version"}),"\n",(0,s.jsxs)(n.p,{children:["You can use a ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/tools/global-json",children:(0,s.jsx)(n.code,{children:"global.json"})})," file to specify the XPF SDK version to use:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:"title=global.json",children:'{\n  "msbuild-sdks": {\n    "Xpf.Sdk": "1.1.0"\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["And in your ",(0,s.jsx)(n.code,{children:".csproj"})," simply specify ",(0,s.jsx)(n.code,{children:"Xpf.Sdk"})," without a version:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<Project Sdk="Xpf.Sdk">\n'})}),"\n",(0,s.jsx)(n.h2,{id:"license-keys",children:"License Keys"}),"\n",(0,s.jsxs)(n.p,{children:["Environment variables can be used in ",(0,s.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/nuget/consume-packages/consuming-packages-authenticated-feeds#credentials-in-nugetconfig-files",children:(0,s.jsx)(n.code,{children:"nuget.config"})})," file and in ",(0,s.jsx)(n.code,{children:".csproj"})," files to store license keys. This can be useful to avoid committing license keys to source control."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["This environment variable can be named however you want, but this documentation will assume ",(0,s.jsx)(n.code,{children:"XpfLicenseKey"}),"."]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To get started, add an environment variable named ",(0,s.jsx)(n.code,{children:"XpfLicenseKey"})," with your license key as the value:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'On Windows, search the start menu for "Environment Variables" and add the variable using the GUI'}),"\n",(0,s.jsxs)(n.li,{children:["On macOS run ",(0,s.jsx)(n.code,{children:"launchctl setenv XpfLicenseKey [LICENSE_KEY]"}),". Note that this will need to be re-run after each reboot."]}),"\n",(0,s.jsxs)(n.li,{children:["On Linux, environment variables are commonly set in the ",(0,s.jsx)(n.code,{children:".bash_profile"}),", ",(0,s.jsx)(n.code,{children:".bashrc"})," or ",(0,s.jsx)(n.code,{children:"/etc/environment"})," files"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Once you've edited your ",(0,s.jsx)(n.code,{children:"nuget.config"}),"/",(0,s.jsx)(n.code,{children:".csproj"})," files, restart any command-line session/IDE that is currently open in order for the change to the environment variables to be picked up"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"nugetconfig",children:"nuget.config"}),"\n",(0,s.jsxs)(n.p,{children:["Edit the credentials in your ",(0,s.jsx)(n.code,{children:"nuget.config"})," file to use the environment variable:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<packageSourceCredentials>\n  <xpf>\n    <add key="Username" value="license" />\n    <add key="ClearTextPassword" value="%XpfLicenseKey%" />\n  </xpf>\n</packageSourceCredentials>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"csproj-files",children:".csproj Files"}),"\n",(0,s.jsxs)(n.p,{children:["Edit the ",(0,s.jsx)(n.code,{children:"RuntimeHostConfigurationOption"})," entry in your ",(0,s.jsx)(n.code,{children:".csproj"})," files to use the environment variable"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<ItemGroup>\n  <RuntimeHostConfigurationOption Include="AvaloniaUI.Xpf.LicenseKey" Value="$(XpfLicenseKey)" />\n</ItemGroup>  \n'})})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>c,x:()=>r});var t=i(96540);const s={},a=t.createContext(s);function c(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);