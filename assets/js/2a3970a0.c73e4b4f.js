"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[6310],{54008:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"concepts/services/storage-provider/file-picker-options","title":"File Picker Options","description":"Common PickerOptions","source":"@site/docs/concepts/services/storage-provider/file-picker-options.md","sourceDirName":"concepts/services/storage-provider","slug":"/concepts/services/storage-provider/file-picker-options","permalink":"/avalonia-docs-ko/docs/concepts/services/storage-provider/file-picker-options","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/concepts/services/storage-provider/file-picker-options.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755602518000,"frontMatter":{"id":"file-picker-options","title":"File Picker Options"},"sidebar":"documentationSidebar","previous":{"title":"Bookmarks","permalink":"/avalonia-docs-ko/docs/concepts/services/storage-provider/bookmarks"},"next":{"title":"Image Interpolation","permalink":"/avalonia-docs-ko/docs/concepts/image-interpolation"}}');var s=n(74848),l=n(28453);const r={id:"file-picker-options",title:"File Picker Options"},o="File Picker Options",d={},c=[{value:"Common PickerOptions",id:"common-pickeroptions",level:2},{value:"Title",id:"title",level:3},{value:"SuggestedStartLocation",id:"suggestedstartlocation",level:3},{value:"FilePickerOpenOptions",id:"filepickeropenoptions",level:2},{value:"AllowMultiple",id:"allowmultiple",level:3},{value:"FileTypeFilter",id:"filetypefilter",level:3},{value:"FilePickerSaveOptions",id:"filepickersaveoptions",level:2},{value:"SuggestedFileName",id:"suggestedfilename",level:3},{value:"DefaultExtension",id:"defaultextension",level:3},{value:"FileTypeChoices",id:"filetypechoices",level:3},{value:"ShowOverwritePrompt",id:"showoverwriteprompt",level:3},{value:"FolderPickerOpenOptions",id:"folderpickeropenoptions",level:2},{value:"AllowMultiple",id:"allowmultiple-1",level:3},{value:"Platform compatibility:",id:"platform-compatibility",level:2},{value:"WebP Inclusion in Options <MinVersion></MinVersion>",id:"webp-inclusion-in-options-",level:2}];function a(e){const i={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components},{MinVersion:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MinVersion",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"file-picker-options",children:"File Picker Options"})}),"\n",(0,s.jsx)(i.h2,{id:"common-pickeroptions",children:"Common PickerOptions"}),"\n",(0,s.jsx)(i.h3,{id:"title",children:"Title"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets the text that appears in the title bar of a picker."}),"\n",(0,s.jsx)(i.h3,{id:"suggestedstartlocation",children:"SuggestedStartLocation"}),"\n",(0,s.jsxs)(i.p,{children:["Gets or sets the initial location where the file open picker looks for files to present to the user.\nCan be obtained from previously picked folder or using ",(0,s.jsx)(i.code,{children:"StorageProvider.TryGetFolderFromPathAsync"})," or ",(0,s.jsx)(i.code,{children:"StorageProvider.TryGetWellKnownFolderAsync"}),"."]}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsx)(i.p,{children:"This is a suggestion for the system, that can ignore this parameter, if application doesn't have access to the folder or it doesn't exist."})}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:["On Linux some DBus file picker don't support start location. For using GTK Free Desktop disable ",(0,s.jsx)(i.code,{children:"UseDBusFilePicker"})," in ",(0,s.jsx)(i.code,{children:"X11PlatformOptions"})]})}),"\n",(0,s.jsx)(i.h2,{id:"filepickeropenoptions",children:"FilePickerOpenOptions"}),"\n",(0,s.jsx)(i.h3,{id:"allowmultiple",children:"AllowMultiple"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets an option indicating whether open picker allows users to select multiple files."}),"\n",(0,s.jsx)(i.h3,{id:"filetypefilter",children:"FileTypeFilter"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets the collection of file types that the file open picker displays."}),"\n",(0,s.jsx)(i.p,{children:"To create a list of file types for the file picker:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-cs",children:'//This can also be applied for SaveFilePicker.\nvar files = await _target.StorageProvider.OpenFilePickerAsync(new FilePickerOpenOptions()\n{\n Title = title,\n//You can add either custom or from the built-in file types. See "Defining custom file types" on how to create a custom one.\n FileTypeFilter = new[] { ImageAll, FilePickerFileTypes.TextPlain }\n});\n'})}),"\n",(0,s.jsx)(i.h2,{id:"filepickersaveoptions",children:"FilePickerSaveOptions"}),"\n",(0,s.jsx)(i.h3,{id:"suggestedfilename",children:"SuggestedFileName"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets the file name that the file save picker suggests to the user."}),"\n",(0,s.jsx)(i.h3,{id:"defaultextension",children:"DefaultExtension"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets the default extension to be used to save the file."}),"\n",(0,s.jsx)(i.h3,{id:"filetypechoices",children:"FileTypeChoices"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets the collection of valid file types that the user can choose to assign to a file."}),"\n",(0,s.jsx)(i.h3,{id:"showoverwriteprompt",children:"ShowOverwritePrompt"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets a value indicating whether file open picker displays a warning if the user specifies the name of a file that already exists."}),"\n",(0,s.jsx)(i.h2,{id:"folderpickeropenoptions",children:"FolderPickerOpenOptions"}),"\n",(0,s.jsx)(i.h3,{id:"allowmultiple-1",children:"AllowMultiple"}),"\n",(0,s.jsx)(i.p,{children:"Gets or sets an option indicating whether open picker allows users to select multiple folders."}),"\n",(0,s.jsx)(i.h2,{id:"platform-compatibility",children:"Platform compatibility:"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"Feature"}),(0,s.jsx)(i.th,{children:"Managed"}),(0,s.jsx)(i.th,{children:"Windows"}),(0,s.jsx)(i.th,{children:"macOS"}),(0,s.jsx)(i.th,{children:"Linux"}),(0,s.jsx)(i.th,{children:"Browser"}),(0,s.jsx)(i.th,{children:"Android"}),(0,s.jsx)(i.th,{children:"iOS"})]})}),(0,s.jsxs)(i.tbody,{children:[(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"Title"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2716"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"SuggestedStartLocation"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"AllowMultiple"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"FileTypeFilter"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"SuggestedFileName"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2716"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"DefaultExtension"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2716"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"FileTypeChoices"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2716"})]}),(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"ShowOverwritePrompt"})}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2716"}),(0,s.jsx)(i.td,{children:"\u2714"}),(0,s.jsx)(i.td,{children:"\u2716"}),(0,s.jsx)(i.td,{children:"\u2716"}),(0,s.jsx)(i.td,{children:"\u2716"})]})]})]}),"\n",(0,s.jsx)(i.h1,{id:"defining-custom-file-types",children:"Defining custom file types"}),"\n",(0,s.jsx)(i.p,{children:"Avalonia has set of built-in file types:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.All - all files"}),"\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.TextPlain - txt files"}),"\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.ImageAll - all images"}),"\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.ImageJpg - jpg images"}),"\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.ImagePng - png images"}),"\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.ImageWebP - webp images"}),"\n",(0,s.jsx)(i.li,{children:"FilePickerFileTypes.Pdf - pdf documents"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"However it is possible to define custom file types that can be used by the picker."}),"\n",(0,s.jsx)(i.p,{children:"For instance, the built-in ImageAll type is defined as:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-cs",children:'public static FilePickerFileType ImageAll { get; } = new("All Images")\n{\n    Patterns = new[] { "*.png", "*.jpg", "*.jpeg", "*.gif", "*.bmp", "*.webp" },\n    AppleUniformTypeIdentifiers = new[] { "public.image" },\n    MimeTypes = new[] { "image/*" }\n};\n'})}),"\n",(0,s.jsx)(i.p,{children:"Where each file type has the following hints that are used by the different platforms:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"Patterns"})," are used by most Windows, Linux and Browser platforms, and is a basic GLOB patten that can be matched on types."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"AppleUniformTypeIdentifiers"})," is a standard identifier defined by Apple and is used on macOS and iOS platforms. You can find the correct value for a given file in the macOS terminal with ",(0,s.jsx)(i.code,{children:"mdls -name kMDItemContentType yourfile.ext"}),"."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"MimeTypes"})," is a web identifier for the files used on most platforms, but not Windows and iOS."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Defining all hints is recommended if the information is known."}),"\n",(0,s.jsx)(i.admonition,{type:"note",children:(0,s.jsxs)(i.p,{children:["If specific hint is not known, don't set random values or \"",(0,s.jsx)(i.em,{children:"."}),'" wildcard, instead keep this collection null. It will tell the platform to ignore this collection and instead try to use another one.']})}),"\n",(0,s.jsxs)(i.h2,{id:"webp-inclusion-in-options-",children:["WebP Inclusion in Options ",(0,s.jsx)(n,{version:"11.1"})]}),"\n",(0,s.jsxs)(i.p,{children:["Keep in mind that ",(0,s.jsx)(i.code,{children:"FilePickerFileTypes.ImageWebP"}),' and the addition of "*.webp" to the "All Images" patterns were introduced in version 11.1. You can still create custom file picker types in older versions to incorporate WebP images. For example, to allow only a WebP image to be picked, you can use this:']}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-cs",children:'var customWebPFileType = new FilePickerFileType("Only WebP Images")\n{\n    Patterns = new[] { "*.webp" },\n    AppleUniformTypeIdentifiers = new[] { "org.webmproject.webp" },\n    MimeTypes = new[] { "image/webp" }\n};\n'})}),"\n",(0,s.jsx)(i.p,{children:'And if you want to include WebP as one of the file types you consider to be an image, you can use the "ImageAll" example shown above.'})]})}function h(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var t=n(96540);const s={},l=t.createContext(s);function r(e){const i=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);