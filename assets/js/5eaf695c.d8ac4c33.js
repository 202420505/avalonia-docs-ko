"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[4515],{2585:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"concepts/services/storage-provider/index","title":"StorageProvider","description":"The StorageProvider is central to file and folder management. It provides methods for file and folder selection, checking platform capabilities, and interacting with stored bookmarks.","source":"@site/docs/concepts/services/storage-provider/index.md","sourceDirName":"concepts/services/storage-provider","slug":"/concepts/services/storage-provider/","permalink":"/avalonia-docs-ko/docs/concepts/services/storage-provider/","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/concepts/services/storage-provider/index.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755671977000,"frontMatter":{"id":"index","title":"StorageProvider"},"sidebar":"documentationSidebar","previous":{"title":"Platform Settings","permalink":"/avalonia-docs-ko/docs/concepts/services/platform-settings"},"next":{"title":"Storage Items","permalink":"/avalonia-docs-ko/docs/concepts/services/storage-provider/storage-item"}}');var t=n(74848),i=n(28453);const d={id:"index",title:"StorageProvider"},l="StorageProvider",o={},c=[{value:"Properties",id:"properties",level:2},{value:"CanOpen",id:"canopen",level:3},{value:"CanSave",id:"cansave",level:3},{value:"CanPickFolder",id:"canpickfolder",level:3},{value:"Methods",id:"methods",level:2},{value:"OpenFilePickerAsync",id:"openfilepickerasync",level:3},{value:"SaveFilePickerAsync",id:"savefilepickerasync",level:3},{value:"OpenFolderPickerAsync",id:"openfolderpickerasync",level:3},{value:"OpenFileBookmarkAsync",id:"openfilebookmarkasync",level:3},{value:"OpenFolderBookmarkAsync",id:"openfolderbookmarkasync",level:3},{value:"TryGetFileFromPathAsync",id:"trygetfilefrompathasync",level:3},{value:"TryGetFolderFromPathAsync",id:"trygetfolderfrompathasync",level:3},{value:"TryGetWellKnownFolderAsync",id:"trygetwellknownfolderasync",level:3},{value:"Extension methods",id:"extension-methods",level:2},{value:"TryGetFileFromPathAsync",id:"trygetfilefrompathasync-1",level:3},{value:"TryGetFolderFromPathAsync",id:"trygetfolderfrompathasync-1",level:3},{value:"Platform compatibility:",id:"platform-compatibility",level:2}];function a(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"storageprovider",children:"StorageProvider"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"StorageProvider"})," is central to file and folder management. It provides methods for file and folder selection, checking platform capabilities, and interacting with stored bookmarks."]}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"StorageProvider"})," can be access through an instance of ",(0,t.jsx)(r.code,{children:"TopLevel"})," or ",(0,t.jsx)(r.code,{children:"Window"}),", for more details on accessing ",(0,t.jsx)(r.code,{children:"TopLevel"})," please visit ",(0,t.jsx)(r.a,{href:"../../toplevel",children:"TopLevel"})," page:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"var storage = window.StorageProvider;\n"})}),"\n",(0,t.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(r.h3,{id:"canopen",children:"CanOpen"}),"\n",(0,t.jsxs)(r.p,{children:["Indicates whether it's possible to open a ",(0,t.jsx)(r.code,{children:"open file picker"})," on the current platform."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"bool CanOpen { get; }\n"})}),"\n",(0,t.jsx)(r.h3,{id:"cansave",children:"CanSave"}),"\n",(0,t.jsxs)(r.p,{children:["Indicates whether it's possible to open a ",(0,t.jsx)(r.code,{children:"save file picker"})," on the current platform."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"bool CanSave { get; }\n"})}),"\n",(0,t.jsx)(r.h3,{id:"canpickfolder",children:"CanPickFolder"}),"\n",(0,t.jsxs)(r.p,{children:["Indicates whether it's possible to open a ",(0,t.jsx)(r.code,{children:"folder picker"})," on the current platform."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"bool CanPickFolder { get; }\n"})}),"\n",(0,t.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(r.h3,{id:"openfilepickerasync",children:"OpenFilePickerAsync"}),"\n",(0,t.jsx)(r.p,{children:"Opens a file picker dialog."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IReadOnlyList<IStorageFile>> OpenFilePickerAsync(FilePickerOpenOptions options);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The method returns an array of selected ",(0,t.jsx)(r.code,{children:"IStorageFile"})," instances or an empty collection if the user cancels the dialog."]}),"\n",(0,t.jsx)(r.h3,{id:"savefilepickerasync",children:"SaveFilePickerAsync"}),"\n",(0,t.jsx)(r.p,{children:"Opens a save file picker dialog."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageFile?> SaveFilePickerAsync(FilePickerSaveOptions options);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The method returns a saved ",(0,t.jsx)(r.code,{children:"IStorageFile"})," instance or null if the user cancels the dialog."]}),"\n",(0,t.jsx)(r.h3,{id:"openfolderpickerasync",children:"OpenFolderPickerAsync"}),"\n",(0,t.jsx)(r.p,{children:"Opens a folder picker dialog."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IReadOnlyList<IStorageFolder>> OpenFolderPickerAsync(FolderPickerOpenOptions options);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The method returns an array of selected ",(0,t.jsx)(r.code,{children:"IStorageFolder"})," instances or an empty collection if the user cancels the dialog."]}),"\n",(0,t.jsx)(r.h3,{id:"openfilebookmarkasync",children:"OpenFileBookmarkAsync"}),"\n",(0,t.jsxs)(r.p,{children:["Opens a ",(0,t.jsx)(r.code,{children:"IStorageBookmarkFile"})," from the bookmark ID."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageBookmarkFile?> OpenFileBookmarkAsync(string bookmark);\n"})}),"\n",(0,t.jsx)(r.p,{children:"The method returns a bookmarked file or null if the operating system denied the request."}),"\n",(0,t.jsx)(r.h3,{id:"openfolderbookmarkasync",children:"OpenFolderBookmarkAsync"}),"\n",(0,t.jsxs)(r.p,{children:["Opens a ",(0,t.jsx)(r.code,{children:"IStorageBookmarkFolder"})," from the bookmark ID."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageBookmarkFolder?> OpenFolderBookmarkAsync(string bookmark);\n"})}),"\n",(0,t.jsx)(r.p,{children:"The method returns a bookmarked folder or null if the operating system denied the request."}),"\n",(0,t.jsx)(r.h3,{id:"trygetfilefrompathasync",children:"TryGetFileFromPathAsync"}),"\n",(0,t.jsx)(r.p,{children:"Attempts to read a file from the file system by its path."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageFile?> TryGetFileFromPathAsync(Uri filePath);\n"})}),"\n",(0,t.jsx)(r.p,{children:'The method returns a file or null if it doesn\'t exist. The filePath parameter is expected to be an absolute path with a "file" scheme, but can be a URI with a "content" scheme on Android.'}),"\n",(0,t.jsx)(r.h3,{id:"trygetfolderfrompathasync",children:"TryGetFolderFromPathAsync"}),"\n",(0,t.jsx)(r.p,{children:"Attempts to read a folder from the file system by its path."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageFolder?> TryGetFolderFromPathAsync(Uri folderPath);\n"})}),"\n",(0,t.jsx)(r.p,{children:'The method returns a folder or null if it doesn\'t exist. The folderPath parameter is expected to be an absolute path with a "file" scheme, but can be a URI with a "content" scheme on Android.'}),"\n",(0,t.jsx)(r.h3,{id:"trygetwellknownfolderasync",children:"TryGetWellKnownFolderAsync"}),"\n",(0,t.jsx)(r.p,{children:"Attempts to read a folder from the file system by its well-known folder identifier."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageFolder?> TryGetWellKnownFolderAsync(WellKnownFolder wellKnownFolder);\n"})}),"\n",(0,t.jsx)(r.p,{children:"The method returns a folder or null if it doesn't exist."}),"\n",(0,t.jsx)(r.h2,{id:"extension-methods",children:"Extension methods"}),"\n",(0,t.jsx)(r.h3,{id:"trygetfilefrompathasync-1",children:"TryGetFileFromPathAsync"}),"\n",(0,t.jsx)(r.p,{children:"Attempts to read a file from the file system by its path."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageFile?> TryGetFileFromPathAsync(this IStorageProvider provider, string filePath);\n"})}),"\n",(0,t.jsx)(r.p,{children:"The method returns a file or null if it doesn't exist.\nThis method accepts local file path string as a parameter without any scheme.\nOnly supported on the OS, with physical file paths, primarily only desktop."}),"\n",(0,t.jsx)(r.h3,{id:"trygetfolderfrompathasync-1",children:"TryGetFolderFromPathAsync"}),"\n",(0,t.jsx)(r.p,{children:"Attempts to read a folder from the file system by its path."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cs",children:"Task<IStorageFolder?> TryGetFolderFromPathAsync(this IStorageProvider provider, string folderPath);\n"})}),"\n",(0,t.jsx)(r.p,{children:"The method returns a folder or null if it doesn't exist.\nThis method accepts local folder path string as a parameter without any scheme.\nOnly supported on the OS, with physical file paths, primarily only desktop."}),"\n",(0,t.jsx)(r.h2,{id:"platform-compatibility",children:"Platform compatibility:"}),"\n",(0,t.jsxs)(r.table,{children:[(0,t.jsx)(r.thead,{children:(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.th,{children:"Feature"}),(0,t.jsx)(r.th,{children:"Managed"}),(0,t.jsx)(r.th,{children:"Windows"}),(0,t.jsx)(r.th,{children:"macOS"}),(0,t.jsx)(r.th,{children:"Linux"}),(0,t.jsx)(r.th,{children:"Browser"}),(0,t.jsx)(r.th,{children:"Android"}),(0,t.jsx)(r.th,{children:"iOS"})]})}),(0,t.jsxs)(r.tbody,{children:[(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"OpenFileBookmarkAsync"})}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"OpenFolderBookmarkAsync"})}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714*"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"OpenFilePickerAsync"})}),(0,t.jsx)(r.td,{children:"\u2714**"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"SaveFilePickerAsync"})}),(0,t.jsx)(r.td,{children:"\u2714**"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714***"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2716"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"OpenFolderPickerAsync"})}),(0,t.jsx)(r.td,{children:"\u2714**"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714***"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"TryGetFileFromPathAsync"})}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2716"}),(0,t.jsx)(r.td,{children:"\u2716"}),(0,t.jsx)(r.td,{children:"\u2716"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"TryGetFolderFromPathAsync"})}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2716"}),(0,t.jsx)(r.td,{children:"\u2716"}),(0,t.jsx)(r.td,{children:"\u2716"})]}),(0,t.jsxs)(r.tr,{children:[(0,t.jsx)(r.td,{children:(0,t.jsx)(r.code,{children:"TryGetWellKnownFolderAsync"})}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"}),(0,t.jsx)(r.td,{children:"\u2714"})]})]})]}),"\n",(0,t.jsx)(r.p,{children:"* Bookmarks are not properly supported on desktop platforms and instead return file path instead. macOS support is planned in order to get it work with Sandboxed Apple Store apps."}),"\n",(0,t.jsx)(r.p,{children:"** Managed file picker works only on desktop platforms where it's possible to open a custom window."}),"\n",(0,t.jsx)(r.p,{children:"*** Only Chromium based browsers have a proper support for file pickers."})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>l});var s=n(96540);const t={},i=s.createContext(t);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);