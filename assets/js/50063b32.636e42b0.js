"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[6898],{40768:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"platforms/macos","title":"macOS","description":"Key Mapping","source":"@site/xpf/platforms/macos.md","sourceDirName":"platforms","slug":"/platforms/macos","permalink":"/xpf/platforms/macos","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/xpf/platforms/macos.md","tags":[],"version":"current","frontMatter":{"id":"macos","title":"macOS"},"sidebar":"documentationSidebar","previous":{"title":"Linux","permalink":"/xpf/platforms/linux"},"next":{"title":"Embedding Avalonia controls in XPF","permalink":"/xpf/embedding/avalonia-in-xpf/embedding-avalonia-controls-in-XPF"}}');var t=o(74848),a=o(28453);const s={id:"macos",title:"macOS"},r=void 0,l={},c=[{value:"Key Mapping",id:"key-mapping",level:2},{value:"Automatic macOS Key Mapping",id:"automatic-macos-key-mapping",level:2},{value:"Automatic macOS Keyboard Mapping",id:"automatic-macos-keyboard-mapping",level:2}];function d(e){const n={a:"a",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"key-mapping",children:"Key Mapping"}),"\n",(0,t.jsx)(n.p,{children:"macOS has different modifier keys to Windows and Linux. By default modifier keys are mapped as follows:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Control -> ",(0,t.jsx)(n.code,{children:"Key.LeftCtrl"})," / ",(0,t.jsx)(n.code,{children:"Key.RightCtrl"})," / ",(0,t.jsx)(n.code,{children:"ModifierKeys.Control"})]}),"\n",(0,t.jsxs)(n.li,{children:["Option -> ",(0,t.jsx)(n.code,{children:"Key.LeftAlt"})," / ",(0,t.jsx)(n.code,{children:"Key.RightAlt"})," / ",(0,t.jsx)(n.code,{children:"ModifierKeys.Alt"})]}),"\n",(0,t.jsxs)(n.li,{children:["Command -> ",(0,t.jsx)(n.code,{children:"Key.LWin"})," / ",(0,t.jsx)(n.code,{children:"Key.RWin"})," / ",(0,t.jsx)(n.code,{children:"ModifierKeys.Windows"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"However there are problems with this mapping:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:'macOS applications generally use the Command key where the Control key would usually be used on Windows and Linux. For example "Copy" is Command-C on macOS instead of Control+C'}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ModifierKeys.Windows"})," is actually ",(0,t.jsxs)(n.a,{href:"https://github.com/dotnet/wpf/blob/6634719e22053aab8e5e0db37618170494aea334/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/KeyboardDevice.cs#L207-L219",children:["not set in ",(0,t.jsx)(n.code,{children:"Keyboard.Modifiers"})," in WPF"]})]}),"\n",(0,t.jsx)(n.li,{children:'Common controls such as text boxes are expected to have different keyboard shortcuts in macOS, such as "Move the insertion point to the beginning of the previous word" being Option+Left Arrow on macOS instead of Control+Left Arrow'}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"automatic-macos-key-mapping",children:"Automatic macOS Key Mapping"}),"\n",(0,t.jsxs)(n.p,{children:["To fix many of these problems, one can call the ",(0,t.jsx)(n.code,{children:"XpfKeyboard.MapMacOSKeys()"})," method on startup. This would usually be done in the same place as ",(0,t.jsx)(n.a,{href:"../third-party-libraries",children:"the XPF WinAPI shim setup"}),"; that is, in the constructor of your ",(0,t.jsx)(n.code,{children:"App"})," class or ",(0,t.jsx)(n.code,{children:"Program.Main"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-csharp",children:"using System.Windows;\nusing Atlantis;\n\nnamespace XpfKeyboardMappingExample;\n\npublic partial class App : Application\n{\n    public App()\n    {\n        XpfKeyboard.MapMacOSKeys();\n    }\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:"Calling this method on macOS:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Maps the Command key to the Control key"}),"\n",(0,t.jsxs)(n.li,{children:["Maps some common text box keyboard shortcuts to their XPF equivalents","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Command+Left -> Home"}),"\n",(0,t.jsx)(n.li,{children:"Command+Right -> End"}),"\n",(0,t.jsx)(n.li,{children:"Option+Left Arrow-> Ctrl+Left Arrow"}),"\n",(0,t.jsx)(n.li,{children:"Option+Left Arrow -> Ctrl+Left Arrow"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"automatic-macos-keyboard-mapping",children:"Automatic macOS Keyboard Mapping"}),"\n",(0,t.jsxs)(n.p,{children:["For more flexible key mapping you can ",(0,t.jsx)(n.a,{href:"../advanced/key-mapping",children:"add custom key mappings"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>r});var i=o(96540);const t={},a=i.createContext(t);function s(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);