"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[271],{26370:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"getting-started","title":"Getting started","description":"Step 1: Prepare your WPF project","source":"@site/xpf/getting-started.md","sourceDirName":".","slug":"/getting-started","permalink":"/avalonia-docs-ko/xpf/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs/tree/main/xpf/getting-started.md","tags":[],"version":"current","frontMatter":{"id":"getting-started","title":"Getting started"},"sidebar":"documentationSidebar","previous":{"title":"Welcome","permalink":"/avalonia-docs-ko/xpf/welcome"},"next":{"title":"Porting Tips","permalink":"/avalonia-docs-ko/xpf/porting-tips"}}');var r=t(74848),i=t(28453);const s={id:"getting-started",title:"Getting started"},a=void 0,d={},l=[{value:"Step 1: Prepare your WPF project",id:"step-1-prepare-your-wpf-project",level:2},{value:"Step 2: Add a <code>NuGet.config</code>",id:"step-2-add-a-nugetconfig",level:2},{value:"Step 3: Use the XPF SDK",id:"step-3-use-the-xpf-sdk",level:2},{value:"Step 4: Add your Licence Key",id:"step-4-add-your-licence-key",level:2},{value:"Step 5: Clean your solution",id:"step-5-clean-your-solution",level:2},{value:"Step 6: Run the project",id:"step-6-run-the-project",level:2},{value:"Additional Projects",id:"additional-projects",level:2},{value:"Target Framework",id:"target-framework",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"step-1-prepare-your-wpf-project",children:"Step 1: Prepare your WPF project"}),"\n",(0,r.jsxs)(n.admonition,{type:"note",children:[(0,r.jsx)(n.p,{children:"This document uses .NET 7.0 as an example, but .NET 6.0 and above are supported by XPF."}),(0,r.jsx)(n.p,{children:"We recommend using .NET 8 (current LTS) or .NET 9."})]}),"\n",(0,r.jsxs)(n.p,{children:["Make sure that your project has been updated/ported to at least ",(0,r.jsx)(n.code,{children:"net6.0-windows"})," and uses the new ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/core/project-sdk/overview",children:"SDK"})," csproj format."]}),"\n",(0,r.jsxs)(n.p,{children:["For more information see the Microsoft ",(0,r.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/desktop/wpf/migration",children:"How to upgrade a WPF desktop app to .NET 7"})," guide."]}),"\n",(0,r.jsx)(n.p,{children:"Confirm that your project runs acceptably on .NET 7 with WPF."}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["This step is ",(0,r.jsx)(n.strong,{children:"vital"}),". XPF will not work with the old/legacy ",(0,r.jsx)(n.code,{children:".csproj"})," format or versions of .NET less than 6.0. You must first convert your project, and ensure that WPF works with modern .NET version before attempting to use XPF."]})}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["If you are running on Linux, see the ",(0,r.jsx)(n.a,{href:"platforms/linux",children:"linux"})," guide ",(0,r.jsx)(n.strong,{children:"before"})," you install .NET."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["See our ",(0,r.jsx)(n.a,{href:"porting-tips",children:"porting tips"})," for a more detailed run-through of this step."]})}),"\n",(0,r.jsxs)(n.h2,{id:"step-2-add-a-nugetconfig",children:["Step 2: Add a ",(0,r.jsx)(n.code,{children:"NuGet.config"})]}),"\n",(0,r.jsxs)(n.p,{children:["Create a ",(0,r.jsx)(n.code,{children:"NuGet.config"})," file at the root of your solution, or modify an existing one to contain the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<?xml version="1.0" encoding="utf-8"?>\n<configuration>\n  <packageSources>\n    <clear />\n    <add key="api.nuget.org" value="https://api.nuget.org/v3/index.json" />\n    <add key="xpf" value="https://xpf-nuget-feed.avaloniaui.net/v3/index.json" />\n    <add key="avalonia-nightly" value="https://nuget-feed-all.avaloniaui.net/v3/index.json" />\n  </packageSources>\n  <packageSourceCredentials>\n    <xpf>\n      <add key="Username" value="license" />\n      <add key="ClearTextPassword" value="<YOUR_LICENSE_KEY>" />\n    </xpf>\n  </packageSourceCredentials>\n</configuration>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"step-3-use-the-xpf-sdk",children:"Step 3: Use the XPF SDK"}),"\n",(0,r.jsxs)(n.p,{children:["In the executable WPF project, change the SDK to use the XPF SDK in the ",(0,r.jsx)(n.code,{children:".csproj"}),". The first line:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Project Sdk="Microsoft.NET.Sdk">\n'})}),"\n",(0,r.jsx)(n.p,{children:"should be changed to:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Project Sdk="Xpf.Sdk/1.4.0">\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["XPF is in active development and the CI build version changes frequently. The version given here was the latest version at the time of writing, but it is likely that newer versions are available. You can find the latest CI build version at ",(0,r.jsx)(n.a,{href:"https://xpf-nuget-feed.avaloniaui.net/packages/xpf.sdk",children:"https://xpf-nuget-feed.avaloniaui.net/packages/xpf.sdk"}),". See ",(0,r.jsx)(n.a,{href:"build-feeds",children:"nightly builds"})," for more information."]})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["If you have multiple projects which will need to use the same XPF SDK vesion, you can ",(0,r.jsxs)(n.a,{href:"advanced/centralized-management",children:["specify this version in ",(0,r.jsx)(n.code,{children:"global.json"})]})]})}),"\n",(0,r.jsx)(n.h2,{id:"step-4-add-your-licence-key",children:"Step 4: Add your Licence Key"}),"\n",(0,r.jsxs)(n.p,{children:["In your executable's ",(0,r.jsx)(n.code,{children:".csproj"}),", add:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'  <ItemGroup>\n    <RuntimeHostConfigurationOption Include="AvaloniaUI.Xpf.LicenseKey" Value="<YOUR_LICENSE_KEY>" />\n  </ItemGroup>  \n'})}),"\n",(0,r.jsx)(n.p,{children:"Note, that if you have a production license, the AssemblyName of the project has to match your license key"}),"\n",(0,r.jsx)(n.h2,{id:"step-5-clean-your-solution",children:"Step 5: Clean your solution"}),"\n",(0,r.jsx)(n.p,{children:"Changing the project SDK requires a clean of existing build artifacts:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Run ",(0,r.jsx)(n.code,{children:"dotnet clean"})," from the command line; or"]}),"\n",(0,r.jsxs)(n.li,{children:["Use ",(0,r.jsx)(n.code,{children:"Build -> Clean Solution"})," from your IDE; or"]}),"\n",(0,r.jsxs)(n.li,{children:["Delete your ",(0,r.jsx)(n.code,{children:"obj"}),"/",(0,r.jsx)(n.code,{children:"bin"})," directories manually"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"step-6-run-the-project",children:"Step 6: Run the project"}),"\n",(0,r.jsxs)(n.p,{children:["You should be able to run your project from your preferred IDE with Avalonia XPF or use ",(0,r.jsx)(n.code,{children:"dotnet run"}),"."]}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:["If running on Linux see the ",(0,r.jsx)(n.a,{href:"platforms/linux",children:"Linux"})," page for information on how to install .NET and required dependencies."]})}),"\n",(0,r.jsx)(n.h2,{id:"additional-projects",children:"Additional Projects"}),"\n",(0,r.jsxs)(n.p,{children:["If you have non-executable projects that are using WPF APIs and need to build those on Linux or macOS, you can either change the SDK as described above, or if you're targeting ",(0,r.jsx)(n.code,{children:"net7.0-windows"})," add:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<PropertyGroup>\n  <EnableWindowsTargeting>true</EnableWindowsTargeting>\n</PropertyGroup>\n"})}),"\n",(0,r.jsx)(n.p,{children:"to the corresponding project file."}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively create a ",(0,r.jsx)(n.code,{children:"Directory.Build.props"})," file at the root of your solution with the following contents:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:"<Project>\n  <PropertyGroup>\n    <EnableWindowsTargeting>true</EnableWindowsTargeting>\n  </PropertyGroup>\n</Project>  \n"})}),"\n",(0,r.jsx)(n.h2,{id:"target-framework",children:"Target Framework"}),"\n",(0,r.jsxs)(n.p,{children:["Ideally all projects which reference XPF should be using the ",(0,r.jsx)(n.code,{children:"net6.0-windows"})," or ",(0,r.jsx)(n.code,{children:"net7.0-windows"})," TFM. You can use the ",(0,r.jsx)(n.code,{children:"net6.0"})," or ",(0,r.jsx)(n.code,{children:"net7.0"})," TFM but in this case you cannot use ",(0,r.jsx)(n.code,{children:"<EnableWindowsTargeting>"})," and instead must use the XPF SDK."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(96540);const r={},i=o.createContext(r);function s(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);