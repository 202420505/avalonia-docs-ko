"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[7915],{33937:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>s,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"reference/controls/menu-flyout","title":"MenuFlyout","description":"REFERENCE - Built-in Controls","source":"@site/docs/reference/controls/menu-flyout.md","sourceDirName":"reference/controls","slug":"/reference/controls/menu-flyout","permalink":"/avalonia-docs-ko/docs/reference/controls/menu-flyout","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/reference/controls/menu-flyout.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755603059000,"frontMatter":{"title":"MenuFlyout","description":"REFERENCE - Built-in Controls"},"sidebar":"documentationSidebar","previous":{"title":"Menu Controls","permalink":"/avalonia-docs-ko/docs/reference/controls/menu-controls"},"next":{"title":"Menu","permalink":"/avalonia-docs-ko/docs/reference/controls/menu"}}');var r=t(74848),l=t(28453);const a=t.p+"assets/images/menuflyout-button-adbe8e917f2a713f50ed38c2ea7f622f.gif",i={title:"MenuFlyout",description:"REFERENCE - Built-in Controls"},s="MenuFlyout",u={},c=[{value:"Example",id:"example",level:2},{value:"Dynamic MenuFlyout",id:"dynamic-menuflyout",level:2},{value:"More Information",id:"more-information",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"menuflyout",children:"MenuFlyout"})}),"\n",(0,r.jsx)(n.p,{children:"A 'MenuFlyout' allows you to host a simple menu as the flyout for a control. You might use this as an alternative to the context menu."}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["For details of the context menu, see the reference ",(0,r.jsx)(n.a,{href:"./contextmenu",children:"here"}),"."]})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["The properties of a menu flyout are the same as for a flyout. See ",(0,r.jsx)(n.a,{href:"flyouts",children:"here"}),"."]})}),"\n",(0,r.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(n.p,{children:"This is a simple example of the menu flyout:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Button Content="Button" HorizontalAlignment="Center">\n  <Button.Flyout>\n    <MenuFlyout>\n      <MenuItem Header="Open"/>\n      <MenuItem Header="-"/>\n      <MenuItem Header="Close"/>        \n    </MenuFlyout>\n  </Button.Flyout>\n</Button>\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["Note the ",(0,r.jsx)(n.code,{children:"<Separator/>"})," element will not work in a menu flyout. To make a separator line, use a ",(0,r.jsx)(n.code,{children:"<MenuItem>"})," element with the header set to '-' as shown above."]})}),"\n",(0,r.jsx)(n.p,{children:"The resulting menu flyout looks like this:"}),"\n",(0,r.jsx)("img",{src:a,alt:""}),"\n",(0,r.jsx)(n.h2,{id:"dynamic-menuflyout",children:"Dynamic MenuFlyout"}),"\n",(0,r.jsxs)(n.p,{children:["This is an example for a ",(0,r.jsx)(n.code,{children:"MenuFlyout"})," that is created dynamically during runtime based on a collection ",(0,r.jsx)(n.code,{children:"MyMenuItems"})," with items of type ",(0,r.jsx)(n.code,{children:"MyMenuItemViewModel"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'<Button Content="Button">\n  <Button.Flyout>\n    <MenuFlyout ItemsSource="{Binding MyMenuItems}">\n      <MenuFlyout.ItemContainerTheme>\n        <ControlTheme TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}" \n          x:DataType="l:MyMenuItemViewModel">\n\n          <Setter Property="Header" Value="{Binding Header}"/>\n          <Setter Property="ItemsSource" Value="{Binding Items}"/>\n          <Setter Property="Command" Value="{Binding Command}"/>\n          <Setter Property="CommandParameter" Value="{Binding CommandParameter}"/>\n          \n        </ControlTheme>\n      </MenuFlyout.ItemContainerTheme>\n    </MenuFlyout>\n  </Button.Flyout>\n</Button>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"more-information",children:"More Information"}),"\n",(0,r.jsxs)(n.p,{children:["For the complete API documentation about this control, see ",(0,r.jsx)(n.a,{href:"https://api-docs.avaloniaui.net/docs/T_Avalonia_Controls_MenuFlyout",children:"here"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["View the source code on ",(0,r.jsx)(n.em,{children:"GitHub"})," ",(0,r.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/src/Avalonia.Controls/Flyouts/MenuFlyout.cs",children:(0,r.jsx)(n.code,{children:"MenuFlyout.cs"})})]})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(96540);const r={},l=o.createContext(r);function a(e){const n=o.useContext(l);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(l.Provider,{value:n},e.children)}}}]);