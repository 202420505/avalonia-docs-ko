"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[8361],{77031:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"basics/user-interface/multi-touch","title":"Multi-Touch","description":"Avalonia UI, unlike some other frameworks, doesn\'t segregate touch events. Instead, it uses a pointer event system which unifies mouse, stylus, and touch events. This means that rather than having separate TouchEnter or TouchLeave events, you would use PointerPressed, PointerMoved, and PointerReleased events to track touch inputs.","source":"@site/docs/basics/user-interface/multi-touch.md","sourceDirName":"basics/user-interface","slug":"/basics/user-interface/multi-touch","permalink":"/avalonia-docs-ko/docs/basics/user-interface/multi-touch","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/basics/user-interface/multi-touch.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755672260000,"frontMatter":{"id":"multi-touch","title":"Multi-Touch"},"sidebar":"documentationSidebar","previous":{"title":"File Dialogs","permalink":"/avalonia-docs-ko/docs/basics/user-interface/file-dialogs"},"next":{"title":"MessageBox","permalink":"/avalonia-docs-ko/docs/basics/user-interface/messagebox"}}');var o=s(74848),i=s(28453);const r={id:"multi-touch",title:"Multi-Touch"},a=void 0,c={},l=[{value:"Using Gesture Recognizers",id:"using-gesture-recognizers",level:2}];function u(e){const t={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Avalonia UI, unlike some other frameworks, doesn't segregate touch events. Instead, it uses a pointer event system which unifies mouse, stylus, and touch events. This means that rather than having separate ",(0,o.jsx)(t.code,{children:"TouchEnter"})," or ",(0,o.jsx)(t.code,{children:"TouchLeave"})," events, you would use ",(0,o.jsx)(t.code,{children:"PointerPressed"}),", ",(0,o.jsx)(t.code,{children:"PointerMoved"}),", and ",(0,o.jsx)(t.code,{children:"PointerReleased"})," events to track touch inputs."]}),"\n",(0,o.jsx)(t.h2,{id:"using-gesture-recognizers",children:"Using Gesture Recognizers"}),"\n",(0,o.jsx)(t.p,{children:"In addition to basic touch events, Avalonia provides built-in gesture recognizers that make handling common touch gestures like pinch and scroll a breeze. Here's how you can use them:"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-xml",children:'<Image Stretch="UniformToFill"\n       Margin="5"\n       Name="PinchImage"\n       Source="/Assets/delicate-arch-896885_640.jpg">\n    <Image.GestureRecognizers>\n        <PinchGestureRecognizer/>\n        <ScrollGestureRecognizer CanHorizontallyScroll="True" CanVerticallyScroll="True"/>\n    </Image.GestureRecognizers>\n</Image>\n'})}),"\n",(0,o.jsxs)(t.p,{children:["In this example, an ",(0,o.jsx)(t.code,{children:"Image"})," control is set up to respond to pinch and scroll gestures. The ",(0,o.jsx)(t.code,{children:"PinchGestureRecognizer"})," enables pinch-to-zoom functionality, and the ",(0,o.jsx)(t.code,{children:"ScrollGestureRecognizer"})," allows the image to be scrolled both horizontally and vertically."]})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(96540);const o={},i=n.createContext(o);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);