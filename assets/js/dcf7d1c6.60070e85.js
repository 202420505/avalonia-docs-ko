"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[8247],{33405:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"tutorials/music-store-app/add-items-to-users-collection","title":"Add Items to the User\'s Collection","description":"TUTORIALS - Music Store App","source":"@site/docs/tutorials/music-store-app/add-items-to-users-collection.md","sourceDirName":"tutorials/music-store-app","slug":"/tutorials/music-store-app/add-items-to-users-collection","permalink":"/avalonia-docs-ko/docs/tutorials/music-store-app/add-items-to-users-collection","draft":false,"unlisted":false,"editUrl":"https://github.com/202420505/avalonia-docs-ko/tree/main/docs/tutorials/music-store-app/add-items-to-users-collection.md","tags":[],"version":"current","lastUpdatedBy":"Q","lastUpdatedAt":1755603059000,"frontMatter":{"description":"TUTORIALS - Music Store App"},"sidebar":"documentationSidebar","previous":{"title":"Dialog Return","permalink":"/avalonia-docs-ko/docs/tutorials/music-store-app/return-from-dialog"},"next":{"title":"Add Data Persistence","permalink":"/avalonia-docs-ko/docs/tutorials/music-store-app/add-data-persistence"}}');var l=n(74848),i=n(28453);const o=n.p+"assets/images/image-20210310175949319-7970fc71954634335555dcac14a52bdc.png",a={description:"TUTORIALS - Music Store App"},r="Add Items to the User's Collection",c={},d=[{value:"Observable Collection",id:"observable-collection",level:2},{value:"Process the Dialog Result",id:"process-the-dialog-result",level:2},{value:"Main Window View",id:"main-window-view",level:2}];function h(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.header,{children:(0,l.jsx)(t.h1,{id:"add-items-to-the-users-collection",children:"Add Items to the User's Collection"})}),"\n",(0,l.jsxs)(t.p,{children:["On this page you will implement a collection of albums that the user has selected using the search dialog and the ",(0,l.jsx)(t.strong,{children:"Buy Album"})," button, and display them in the main window."]}),"\n",(0,l.jsx)(t.h2,{id:"observable-collection",children:"Observable Collection"}),"\n",(0,l.jsx)(t.p,{children:"Your first step here is to add an observable collection to the main window view model. This will hold the albums that the user has selected using the search dialog."}),"\n",(0,l.jsx)(t.p,{children:"Follow this procedure:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Stop the app if it is running."}),"\n",(0,l.jsxs)(t.li,{children:["Locate and open the ",(0,l.jsx)(t.strong,{children:"MainWindowViewModel.cs"})," file."]}),"\n",(0,l.jsx)(t.li,{children:"Add an observable collection, as shown:"}),"\n"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-csharp",children:"public ObservableCollection<AlbumViewModel> Albums { get; } = new();\n"})}),"\n",(0,l.jsx)(t.h2,{id:"process-the-dialog-result",children:"Process the Dialog Result"}),"\n",(0,l.jsxs)(t.p,{children:["Your next step is to alter the ",(0,l.jsx)(t.code,{children:"AddAlbumAsync"})," command so that it adds the dialog return object (an ",(0,l.jsx)(t.code,{children:"AlbumViewModel"}),") to the observable collection. Follow this procedure:"]}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["In the same ",(0,l.jsx)(t.strong,{children:"MainWindowViewModel.cs"})," file update the ",(0,l.jsx)(t.code,{children:"AddAlbumAsync()"})," command method:"]}),"\n"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-csharp",children:"[RelayCommand]\nprivate async Task AddAlbumAsync()\n{\n    var album = await WeakReferenceMessenger.Default.Send(new PurchaseAlbumMessage());\n    if (album is not null)\n    {\n        Albums.Add(album);\n    }\n}\n"})}),"\n",(0,l.jsx)(t.h2,{id:"main-window-view",children:"Main Window View"}),"\n",(0,l.jsxs)(t.p,{children:["Next you will add XAML to the main window view to display the items in the observable collection. Again you will use a ",(0,l.jsx)(t.strong,{children:"data template"}),", this time inside an ",(0,l.jsx)(t.code,{children:"ItemsControl"}),". The items control is actually  the base class for controls that display multiple items (like the list box), so some of this will already be familiar."]}),"\n",(0,l.jsx)(t.p,{children:"To add the items control and its data template, follow this procedure:"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["Locate and open the ",(0,l.jsx)(t.strong,{children:"MainWindow.axaml"})," file."]}),"\n",(0,l.jsxs)(t.li,{children:["Add the following namespace declaration to the ",(0,l.jsx)(t.code,{children:"<Window>"})," element:"]}),"\n"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-xml",children:'xmlns:views="clr-namespace:Avalonia.MusicStore.Views"\n'})}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsx)(t.li,{children:"Under the button element, add the XAML as shown:"}),"\n"]}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{className:"language-xml",children:'<ScrollViewer VerticalScrollBarVisibility="Auto" Margin="0 40 0 0">\n  <ItemsControl ItemsSource="{Binding Albums}">\n    <ItemsControl.ItemsPanel>\n      <ItemsPanelTemplate>\n        <WrapPanel />\n      </ItemsPanelTemplate>\n    </ItemsControl.ItemsPanel>\n\n    <ItemsControl.ItemTemplate>\n      <DataTemplate>\n        <views:AlbumView Margin="0 0 20 20" />\n      </DataTemplate>\n    </ItemsControl.ItemTemplate>\n  </ItemsControl>\n</ScrollViewer>\n'})}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.strong,{children:"Debug"})," to compile and run the project."]}),"\n",(0,l.jsx)(t.li,{children:"Click the icon button."}),"\n",(0,l.jsx)(t.li,{children:"Type some search text."}),"\n",(0,l.jsx)(t.li,{children:"Click an album to select it."}),"\n",(0,l.jsxs)(t.li,{children:["Click ",(0,l.jsx)(t.strong,{children:"Buy Album"}),"."]}),"\n",(0,l.jsx)(t.li,{children:"Repeat another time."}),"\n"]}),"\n",(0,l.jsx)("p",{children:(0,l.jsx)("img",{className:"image-medium-zoom",src:o,alt:""})}),"\n",(0,l.jsx)(t.p,{children:"You will see the user's album collection building as you search and select. However, if you stop the app running and then start it again, the collection reverts to empty."}),"\n",(0,l.jsx)(t.p,{children:"For the finishing touch, on the next page you will learn how to add some data persistence to the app."})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(h,{...e})}):h(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const l={},i=s.createContext(l);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);