"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[9812],{94757:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>t,contentTitle:()=>a,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"components/media-player/mediaplayer","title":"MediaPlayer","description":"The MediaPlayer class provides the core functionality for media playback in Avalonia applications. It handles media","source":"@site/accelerate/components/media-player/mediaplayer.md","sourceDirName":"components/media-player","slug":"/components/media-player/mediaplayer","permalink":"/accelerate/components/media-player/mediaplayer","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/accelerate/components/media-player/mediaplayer.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"MediaPlayer Quick Start Guide","permalink":"/accelerate/components/media-player/quickstart"},"next":{"title":"MediaPlayerControl","permalink":"/accelerate/components/media-player/mediaplayercontrol"}}');var i=n(74848),d=n(28453);const l={},a="MediaPlayer",t={},c=[{value:"Properties",id:"properties",level:2},{value:"Media Source Properties",id:"media-source-properties",level:3},{value:"Playback Properties",id:"playback-properties",level:3},{value:"State Properties",id:"state-properties",level:3},{value:"Audio Properties",id:"audio-properties",level:3},{value:"Advanced Properties",id:"advanced-properties",level:3},{value:"Events",id:"events",level:2},{value:"Methods",id:"methods",level:2},{value:"Backend Architecture",id:"backend-architecture",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Playback",id:"basic-playback",level:3},{value:"Event Handling",id:"event-handling",level:3},{value:"Resource Cleanup",id:"resource-cleanup",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Related Components",id:"related-components",level:2}];function h(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"mediaplayer",children:"MediaPlayer"})}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"MediaPlayer"})," class provides the core functionality for media playback in Avalonia applications. It handles media\nloading, playback control, and platform-specific backend management, serving as the engine behind\nthe ",(0,i.jsx)(r.code,{children:"MediaPlayerControl"}),"."]}),"\n",(0,i.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,i.jsx)(r.h3,{id:"media-source-properties",children:"Media Source Properties"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Property"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsx)(r.tbody,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Source"}),(0,i.jsx)(r.td,{children:"MediaSource"}),(0,i.jsxs)(r.td,{children:["Gets or sets the media source to be played (",(0,i.jsx)(r.code,{children:"UriSource"})," or ",(0,i.jsx)(r.code,{children:"StreamSource"}),")."]})]})})]}),"\n",(0,i.jsx)(r.h3,{id:"playback-properties",children:"Playback Properties"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Property"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Position"}),(0,i.jsx)(r.td,{children:"TimeSpan"}),(0,i.jsx)(r.td,{children:"Gets or sets the current playback position."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Duration"}),(0,i.jsx)(r.td,{children:"TimeSpan?"}),(0,i.jsx)(r.td,{children:"Gets the total duration of the media. Null for non-seekable media."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"LoadedBehavior"}),(0,i.jsx)(r.td,{children:"MediaPlayerLoadedBehavior"}),(0,i.jsx)(r.td,{children:"Gets or sets playback behavior when media is loaded."})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"state-properties",children:"State Properties"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Property"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"IsSeekable"}),(0,i.jsx)(r.td,{children:"bool"}),(0,i.jsx)(r.td,{children:"Gets whether the current media supports seeking."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"IsBuffering"}),(0,i.jsx)(r.td,{children:"bool"}),(0,i.jsx)(r.td,{children:"Gets whether the media is currently buffering."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"BufferProgress"}),(0,i.jsx)(r.td,{children:"double?"}),(0,i.jsx)(r.td,{children:"Gets buffer progress (0.0-1.0). Null if not available."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"HasVideo"}),(0,i.jsx)(r.td,{children:"bool"}),(0,i.jsx)(r.td,{children:"Gets whether the current media contains video content."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"LastErrorMessage"}),(0,i.jsx)(r.td,{children:"string"}),(0,i.jsx)(r.td,{children:"Gets the most recent error message in error state."})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"audio-properties",children:"Audio Properties"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Property"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Volume"}),(0,i.jsx)(r.td,{children:"double"}),(0,i.jsx)(r.td,{children:"Gets or sets the playback volume (0.0-1.0)."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"IsMuted"}),(0,i.jsx)(r.td,{children:"bool"}),(0,i.jsx)(r.td,{children:"Gets or sets whether audio is muted."})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"advanced-properties",children:"Advanced Properties"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Property"}),(0,i.jsx)(r.th,{children:"Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"Statistics"}),(0,i.jsx)(r.td,{children:"MediaStatistics"}),(0,i.jsx)(r.td,{children:"Gets playback statistics information if available."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ForceVlcBackend"}),(0,i.jsx)(r.td,{children:"bool (static)"}),(0,i.jsx)(r.td,{children:"Forces the use of VLC backend (debugging only)."})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Event"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"NaturalSizeChanged"}),(0,i.jsx)(r.td,{children:"Occurs when the natural size of the video changes."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MediaPrepared"}),(0,i.jsx)(r.td,{children:"Occurs when the media has been prepared and is ready."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MediaStarted"}),(0,i.jsx)(r.td,{children:"Occurs when media playback has started."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MediaPaused"}),(0,i.jsx)(r.td,{children:"Occurs when media playback has been paused."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MediaStopped"}),(0,i.jsx)(r.td,{children:"Occurs when media playback has been stopped."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"MediaPlaybackCompleted"}),(0,i.jsx)(r.td,{children:"Occurs when media playback has completed."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ErrorOccurred"}),(0,i.jsx)(r.td,{children:"Occurs when an error is encountered."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"PropertyChanged"}),(0,i.jsx)(r.td,{children:"Standard INotifyPropertyChanged event."})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Method"}),(0,i.jsx)(r.th,{children:"Return Type"}),(0,i.jsx)(r.th,{children:"Description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"InitializeAsync()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Initializes the media player and its backend."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"PrepareAsync()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Prepares the media for playback."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"PlayAsync()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Starts or resumes media playback."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"PauseAsync()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Pauses media playback."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"StopAsync()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Stops media playback."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"ReleaseAsync()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Releases resources for the current media."})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"UnInitialize()"}),(0,i.jsx)(r.td,{children:"Task"}),(0,i.jsx)(r.td,{children:"Releases all resources used by the player."})]})]})]}),"\n",(0,i.jsx)(r.h2,{id:"backend-architecture",children:"Backend Architecture"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.code,{children:"MediaPlayer"})," uses a pluggable backend architecture to support different platforms:"]}),"\n",(0,i.jsx)(r.p,{children:"The backend selection is automatic based on the platform:"}),"\n",(0,i.jsx)(r.mermaid,{value:'graph TD\n    MP[MediaPlayer] --\x3e IMPB[IMediaPlayerBackend]\n    IMPB --\x3e AVFB["AVFoundation<br/>(macOS/iOS)"]\n    IMPB --\x3e EPB["ExoPlayer<br/>(Android)"]\n    IMPB --\x3e VLCB["LibVLC<br/>(Linux)"]\n    IMPB --\x3e MFB["Media Foundation<br/>(Windows)"]\n    MP:::main\n    IMPB:::interface\n    MFB:::impl\n    AVFB:::impl\n    EPB:::impl\n    VLCB:::impl'}),"\n",(0,i.jsx)(r.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(r.h3,{id:"basic-playback",children:"Basic Playback"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:'// Create and initialize\nvar player = new MediaPlayer();\nawait player.InitializeAsync();\n\n// Configure\nplayer.Volume = 0.8;\nplayer.LoadedBehavior = MediaPlayerLoadedBehavior.Manual;\n\n// Load and play media\nplayer.Source = new UriSource("https://example.com/audio.mp3");\nawait player.PrepareAsync();\nawait player.PlayAsync();\n'})}),"\n",(0,i.jsx)(r.h3,{id:"event-handling",children:"Event Handling"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:'// Setup event handlers\nplayer.MediaPrepared += (s, e) => Console.WriteLine("Ready to play");\nplayer.MediaStarted += (s, e) => Console.WriteLine("Playback started");\nplayer.MediaPlaybackCompleted += (s, e) => Console.WriteLine("Playback completed");\n\n// Error handling\nplayer.ErrorOccurred += (s, e) => {\n    Console.WriteLine($"Error: {e.ErrorMessage}");\n};\n'})}),"\n",(0,i.jsx)(r.h3,{id:"resource-cleanup",children:"Resource Cleanup"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:"// Clean up when done\nawait player.StopAsync();\nawait player.ReleaseAsync();\nawait player.UnInitialize();\n"})}),"\n",(0,i.jsx)(r.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,i.jsx)(r.p,{children:"The MediaPlayer uses an event-based approach to error handling:"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"When an error occurs, the player transitions to an Error state internally"}),"\n",(0,i.jsxs)(r.li,{children:["The ",(0,i.jsx)(r.code,{children:"ErrorOccurred"})," event is raised with detailed error information"]}),"\n",(0,i.jsx)(r.li,{children:"Most methods check for the Error state and will not proceed"}),"\n",(0,i.jsx)(r.li,{children:"Call ReleaseAsync() to reset the error state"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-csharp",children:'// Subscribe to error events\nplayer.ErrorOccurred += (sender, args) =>\n{\n    // Handle the error appropriately here with your custom logic.\n    // Reset with ReleaseAsync() elsewhere if you need to playback again.\n    // ...\n    Console.WriteLine($"Error: {args.Message}");\n};\n\n// Try to play media\ntry {\n    await player.PlayAsync();\n}\ncatch (Exception ex) {\n    // Fallback exception handling if needed\n    if (player.LastErrorMessage != null) {\n        Console.WriteLine($"Error: {player.LastErrorMessage}");\n        \n        // Optionally reset the player\n        await player.ReleaseAsync();\n    }\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Initialization and Cleanup"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Always call ",(0,i.jsx)(r.code,{children:"InitializeAsync()"})," before using ",(0,i.jsx)(r.code,{children:"MediaPlayer"}),"."]}),"\n",(0,i.jsxs)(r.li,{children:["Call ",(0,i.jsx)(r.code,{children:"ReleaseAsync()"})," between loading different media sources."]}),"\n",(0,i.jsxs)(r.li,{children:["Call ",(0,i.jsx)(r.code,{children:"UnInitialize()"})," when completely done with ",(0,i.jsx)(r.code,{children:"MediaPlayer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Error Handling"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["Subscribe to the ",(0,i.jsx)(r.code,{children:"ErrorOccurred"})," event to handle playback errors."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Resource Management"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Properly clean up to avoid resource leaks."}),"\n",(0,i.jsxs)(r.li,{children:["Consider reusing a single ",(0,i.jsx)(r.code,{children:"MediaPlayer"})," instance for multiple media items that are to be played sequentially."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(r.li,{children:["\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"Platform Considerations"}),":"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:"Test media playback on all target platforms."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"related-components",children:"Related Components"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"/accelerate/components/media-player/mediaplayercontrol",children:"MediaPlayerControl"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"/accelerate/components/media-player/mediasource",children:"MediaSource"})}),"\n"]})]})}function o(e={}){const{wrapper:r}={...(0,d.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>a});var s=n(96540);const i={},d=s.createContext(i);function l(e){const r=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),s.createElement(d.Provider,{value:r},e.children)}}}]);