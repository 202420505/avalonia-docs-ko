"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[8360],{1482:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"concepts/services/activatable-lifetime","title":"Activatable Lifetime","description":"The IActivatableLifetime service defines a set of methods and events related to the activation and deactivation lifecycle of an application. IActivatableLifetime is a global app-level service that can be accessed from the Application instance using the TryGetService method: Application.Current.TryGetService().","source":"@site/docs/concepts/services/activatable-lifetime.md","sourceDirName":"concepts/services","slug":"/concepts/services/activatable-lifetime","permalink":"/docs/concepts/services/activatable-lifetime","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/services/activatable-lifetime.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755588461000,"frontMatter":{"id":"activatable-lifetime","title":"Activatable Lifetime"},"sidebar":"documentationSidebar","previous":{"title":"Services","permalink":"/docs/concepts/services/"},"next":{"title":"Clipboard","permalink":"/docs/concepts/services/clipboard"}}');var a=i(74848),d=i(28453);const s={id:"activatable-lifetime",title:"Activatable Lifetime"},r="Activatable Lifetime ",c={},l=[{value:"Events",id:"events",level:2},{value:"Activated",id:"activated",level:3},{value:"Deactivated",id:"deactivated",level:3},{value:"Methods",id:"methods",level:2},{value:"TryLeaveBackground",id:"tryleavebackground",level:3},{value:"TryEnterBackground",id:"tryenterbackground",level:3},{value:"Examples",id:"examples",level:2},{value:"Handling app entering and exiting background state",id:"handling-app-entering-and-exiting-background-state",level:3},{value:"Handling URI activation",id:"handling-uri-activation",level:3},{value:"Platform compatibility:",id:"platform-compatibility",level:2}];function o(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components},{MinVersion:i}=t;return i||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("MinVersion",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsxs)(t.h1,{id:"activatable-lifetime-",children:["Activatable Lifetime ",(0,a.jsx)(i,{version:"11.1"})]})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"IActivatableLifetime"})," service defines a set of methods and events related to the activation and deactivation lifecycle of an application. ",(0,a.jsx)(t.code,{children:"IActivatableLifetime"})," is a global app-level service that can be accessed from the Application instance using the ",(0,a.jsx)(t.code,{children:"TryGetService"})," method: ",(0,a.jsx)(t.code,{children:"Application.Current.TryGetService<IActivatableLifetime>()"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"events",children:"Events"}),"\n",(0,a.jsx)(t.h3,{id:"activated",children:"Activated"}),"\n",(0,a.jsx)(t.p,{children:"An event that is raised when the application is Activated for various reasons as described by the ActivationKind enumeration."}),"\n",(0,a.jsx)(t.h3,{id:"deactivated",children:"Deactivated"}),"\n",(0,a.jsx)(t.p,{children:"An event that is raised when the application is Deactivated for various reasons as described by the ActivationKind enumeration."}),"\n",(0,a.jsx)(t.h2,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(t.h3,{id:"tryleavebackground",children:"TryLeaveBackground"}),"\n",(0,a.jsx)(t.p,{children:"Tells the application that it should attempt to leave its background state.\nReturns true if it was possible and the platform supports this. False otherwise."}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"For example on macOS this would be [NSApp unhide]."})}),"\n",(0,a.jsx)(t.h3,{id:"tryenterbackground",children:"TryEnterBackground"}),"\n",(0,a.jsx)(t.p,{children:"Tells the application that it should attempt to enter its background state."}),"\n",(0,a.jsx)(t.p,{children:"Returns true if it was possible and the platform supports this. False otherwise."}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsx)(t.p,{children:"For example on macOS this would be [NSApp hide]."})}),"\n",(0,a.jsx)(t.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(t.h3,{id:"handling-app-entering-and-exiting-background-state",children:"Handling app entering and exiting background state"}),"\n",(0,a.jsx)(t.p,{children:"In some applications, you might want to pause or stop some code processing, while application is in background.\nIt might be pausing multimedia playback, or disabling recurrent HTTP requests."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'if (Application.Current.TryGetFeature<IActivatableLifetime>() is { } activatableLifetime)\n{\n    activatableLifetime.Activated += (sender, args) =>\n    {\n        if (args.Kind == ActivationKind.Background)\n        {\n            Console.WriteLine($"App exited background");\n        }\n    };\n    activatableLifetime.Deactivated += (sender, args) =>\n    {\n        if (args.Kind == ActivationKind.Background)\n        {\n            Console.WriteLine($"App entered background");\n        }\n    };\n}\n'})}),"\n",(0,a.jsx)(t.h3,{id:"handling-uri-activation",children:"Handling URI activation"}),"\n",(0,a.jsx)(t.p,{children:"Some apps might need to supports Protocol Activation, or as it's often called - deep linking. Link schemas (protocols) that are registered in the system and associated with the app. Once registered, OS will always redirect these links to the app."}),"\n",(0,a.jsxs)(t.p,{children:["App can handle these links in different ways. But typical use cases would be either enabling navigation to the specific page, or using it as a ",(0,a.jsx)(t.a,{href:"https://www.oauth.com/oauth2-servers/oauth-native-apps/redirect-urls-for-native-apps/",children:"redirect URL in OAuth operations"}),"."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-csharp",children:'if (Application.Current.TryGetFeature<IActivatableLifetime>() is { } activatableLifetime)\n{\n    activatableLifetime.Activated += (s, a) =>\n   {\n        if (a is ProtocolActivatedEventArgs protocolArgs && protocolArgs.Kind == ActivationKind.OpenUri)\n        {\n            Console.WriteLine($"App activated via Uri: {protocolArgs.Uri}");\n        }\n   };\n}\n'})}),"\n",(0,a.jsx)(t.admonition,{type:"note",children:(0,a.jsxs)(t.p,{children:["In order to enable protocol handling for your app, you need to follow platform specific instructions on updating manifest.\nOn macOS and iOS, you need to add CFBundleURLTypes with CFBundleURLSchemes segment to your ",(0,a.jsx)(t.code,{children:"Info.plist"}),". See ",(0,a.jsx)(t.a,{href:"https://rderik.com/blog/creating-app-custom-url-scheme/",children:"https://rderik.com/blog/creating-app-custom-url-scheme/"})," (skip Swift part, as it's handled by ",(0,a.jsx)(t.code,{children:"IActivatableLifetime"}),").\nOn Android, you need to add ",(0,a.jsx)(t.code,{children:"intent-filter"})," with specific ",(0,a.jsx)(t.code,{children:"android:scheme"})," to your ",(0,a.jsx)(t.code,{children:"AndroidManifest.xml"}),". See ",(0,a.jsx)(t.a,{href:"https://developer.android.com/training/app-links/deep-linking",children:"https://developer.android.com/training/app-links/deep-linking"})," for details (skip Kotlin/Java parts, as it's handled by ",(0,a.jsx)(t.code,{children:"IActivatableLifetime"}),")."]})}),"\n",(0,a.jsx)(t.h2,{id:"platform-compatibility",children:"Platform compatibility:"}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{children:"Feature"}),(0,a.jsx)(t.th,{children:"Windows"}),(0,a.jsx)(t.th,{children:"macOS"}),(0,a.jsx)(t.th,{children:"Linux"}),(0,a.jsx)(t.th,{children:"Browser"}),(0,a.jsx)(t.th,{children:"Android"}),(0,a.jsx)(t.th,{children:"iOS"}),(0,a.jsx)(t.th,{children:"Tizen"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"ActivationKind.Background"})}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"ActivationKind.File"})}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"ActivationKind.OpenUri"})}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"ActivationKind.Reopen"})}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"TryLeaveBackground"})}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{children:(0,a.jsx)(t.code,{children:"TryEnterBackground"})}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2714"}),(0,a.jsx)(t.td,{children:"\u2716"}),(0,a.jsx)(t.td,{children:"\u2716"})]})]})]}),"\n",(0,a.jsxs)(t.p,{children:["See ",(0,a.jsx)(t.a,{href:"https://github.com/AvaloniaUI/Avalonia/issues/15316",children:"https://github.com/AvaloniaUI/Avalonia/issues/15316"})," for more information on currently supported and unsupported platforms."]})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>r});var n=i(96540);const a={},d=n.createContext(a);function s(e){const t=n.useContext(d);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(d.Provider,{value:t},e.children)}}}]);