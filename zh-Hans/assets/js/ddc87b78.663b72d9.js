"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[6988],{56780:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"components/webview/faq","title":"Frequently Asked Questions","description":"Is offscreen rendering supported? To avoid airspace issue?","source":"@site/accelerate/components/webview/faq.md","sourceDirName":"components/webview","slug":"/components/webview/faq","permalink":"/zh-Hans/accelerate/components/webview/faq","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/accelerate/components/webview/faq.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"WebAuthenticationBroker","permalink":"/zh-Hans/accelerate/components/webview/webauthenticationbroker"},"next":{"title":"WebView Environment Options","permalink":"/zh-Hans/accelerate/components/webview/interop/environment-options"}}');var r=i(74848),t=i(28453);const s={},a="Frequently Asked Questions",c={},l=[{value:"Is offscreen rendering supported? To avoid airspace issue?",id:"is-offscreen-rendering-supported-to-avoid-airspace-issue",level:2},{value:"Why is NativeWebView control not supported on Linux?",id:"why-is-nativewebview-control-not-supported-on-linux",level:2},{value:"Can I use WebAuthenticationBroker for Google Auth or Microsoft.Identity Auth?",id:"can-i-use-webauthenticationbroker-for-google-auth-or-microsoftidentity-auth",level:2},{value:"Why use WebAuthenticationBroker over other options?",id:"why-use-webauthenticationbroker-over-other-options",level:2},{value:"Does NativeWebView support camera/microphone/screenshare access via getUserMedia() API?",id:"does-nativewebview-support-cameramicrophonescreenshare-access-via-getusermedia-api",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"frequently-asked-questions",children:"Frequently Asked Questions"})}),"\n",(0,r.jsx)(n.h2,{id:"is-offscreen-rendering-supported-to-avoid-airspace-issue",children:"Is offscreen rendering supported? To avoid airspace issue?"}),"\n",(0,r.jsx)(n.p,{children:"No, offscreen rendering is not currently supported. However, we are considering it as an optional feature for future releases."}),"\n",(0,r.jsx)(n.h2,{id:"why-is-nativewebview-control-not-supported-on-linux",children:"Why is NativeWebView control not supported on Linux?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"NativeWebView"})," requires a system browser that can be embedded into Avalonia. Unlike Windows and macOS, Linux has more complex native control embedding, which doesn't work reliably on Wayland-based desktop environments."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recommended Solution:"})," Design your app with ",(0,r.jsx)(n.code,{children:"NativeWebDialog"})," as a fallback. This component provides a similar API to ",(0,r.jsx)(n.code,{children:"NativeWebView"})," but operates in a dedicated window."]}),"\n",(0,r.jsx)(n.h2,{id:"can-i-use-webauthenticationbroker-for-google-auth-or-microsoftidentity-auth",children:"Can I use WebAuthenticationBroker for Google Auth or Microsoft.Identity Auth?"}),"\n",(0,r.jsx)(n.p,{children:"Yes, both authentication providers are supported. You can either:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Build request and redirect ",(0,r.jsx)(n.code,{children:"Uri"}),"s manually"]}),"\n",(0,r.jsxs)(n.li,{children:["Integrate with ",(0,r.jsx)(n.code,{children:"Google.Apis.Auth"})," and ",(0,r.jsx)(n.code,{children:"Microsoft.Identity.Client"})," NuGet packages"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Integration samples are available in our ",(0,r.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Accelerate.Samples/tree/main/WebAuthenticationBrokerSample/WebAuthenticationBrokerSample",children:"sample repository"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"why-use-webauthenticationbroker-over-other-options",children:"Why use WebAuthenticationBroker over other options?"}),"\n",(0,r.jsxs)(n.p,{children:["While ",(0,r.jsx)(n.code,{children:"Microsoft.Identity.Client"})," and ",(0,r.jsx)(n.code,{children:"Google.Apis.Auth"})," include their own Web-UI dialogs, these are limited to specific platforms and providers. WebAuthenticationBroker offers:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Provider-independent implementation"}),"\n",(0,r.jsx)(n.li,{children:"Desktop platform support without special framework requirements"}),"\n",(0,r.jsx)(n.li,{children:"Full macOS support without mac-catalyst limitations"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"does-nativewebview-support-cameramicrophonescreenshare-access-via-getusermedia-api",children:"Does NativeWebView support camera/microphone/screenshare access via getUserMedia() API?"}),"\n",(0,r.jsxs)(n.p,{children:["Yes, ",(0,r.jsx)(n.code,{children:"getUserMedia()"})," API is supported across platforms. Users will receive permission prompts for camera, microphone, or screen sharing access, similar to desktop browsers. macOS support was added in version ",(0,r.jsx)(n.code,{children:"11.2.4"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Some platforms also require developer to configure permissions on the application bundle. If any particular permission is necessary for a main application, it's likely to be necessary for a web view. For example, ",(0,r.jsx)(n.a,{href:"https://developer.apple.com/documentation/bundleresources/information-property-list/nscamerausagedescription?language=objc",children:"NSCameraUsageDescription"})," is necessary for macOS/iOS on bundled apps."]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var o=i(96540);const r={},t=o.createContext(r);function s(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);