"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[1867],{97354:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>o,frontMatter:()=>d,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"concepts/services/insets-manager","title":"Insets Manager","description":"The InsetsManager allows you to interact with the platform\'s system bars and handle changes to the safe area of the mobile window.","source":"@site/docs/concepts/services/insets-manager.md","sourceDirName":"concepts/services","slug":"/concepts/services/insets-manager","permalink":"/zh-Hans/docs/concepts/services/insets-manager","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/concepts/services/insets-manager.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755588461000,"frontMatter":{"id":"insets-manager","title":"Insets Manager"},"sidebar":"documentationSidebar","previous":{"title":"Input Pane","permalink":"/zh-Hans/docs/concepts/services/input-pane"},"next":{"title":"Platform Settings","permalink":"/zh-Hans/docs/concepts/services/platform-settings"}}');var t=n(74848),a=n(28453);const d={id:"insets-manager",title:"Insets Manager"},i=void 0,l={},c=[{value:"Properties",id:"properties",level:2},{value:"IsSystemBarVisible",id:"issystembarvisible",level:3},{value:"DisplayEdgeToEdge",id:"displayedgetoedge",level:3},{value:"SafeAreaPadding",id:"safeareapadding",level:3},{value:"SystemBarColor",id:"systembarcolor",level:3},{value:"Events",id:"events",level:2},{value:"SafeAreaChanged",id:"safeareachanged",level:3},{value:"Properties",id:"properties-1",level:2},{value:"SafeAreaPadding",id:"safeareapadding-1",level:3},{value:"Values",id:"values",level:2},{value:"Light",id:"light",level:3},{value:"Dark",id:"dark",level:3},{value:"Platform compatibility:",id:"platform-compatibility",level:2}];function h(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"InsetsManager"})," allows you to interact with the platform's system bars and handle changes to the safe area of the mobile window."]}),"\n",(0,t.jsxs)(s.p,{children:["The ",(0,t.jsx)(s.code,{children:"InsetsManager"})," can be access through an instance of ",(0,t.jsx)(s.code,{children:"TopLevel"})," or ",(0,t.jsx)(s.code,{children:"Window"}),", for more details on accessing ",(0,t.jsx)(s.code,{children:"TopLevel"})," please visit ",(0,t.jsx)(s.a,{href:"../toplevel",children:"TopLevel"})," page:"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cs",children:"var insetsManager = TopLevel.GetTopLevel(control).InsetsManager;\n"})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["As for now, this service has implementation only on mobile and browser backends. If you need to adjust desktop window decorations, please use ",(0,t.jsx)(s.code,{children:"Window.ExtendClientAreaToDecorationsHint"}),", ",(0,t.jsx)(s.code,{children:"Window.ExtendClientAreaChromeHints"}),", ",(0,t.jsx)(s.code,{children:"Window.ExtendClientAreaTitleBarHeightHint"})," properties."]})}),"\n",(0,t.jsx)(s.admonition,{type:"note",children:(0,t.jsxs)(s.p,{children:["Starting with Avalonia 11.1, any Avalonia app will automatically adjust its root view accordingly to the inset values. This behavior can be disabled by setting ",(0,t.jsx)(s.code,{children:'TopLevel.AutoSafeAreaPadding="False"'})," attached property value on the root view."]})}),"\n",(0,t.jsx)(s.h2,{id:"properties",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"issystembarvisible",children:"IsSystemBarVisible"}),"\n",(0,t.jsx)(s.p,{children:"Gets or sets a value indicating whether the system bars are visible. Returns null if the platform doesn't support showing or hiding system bars."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cs",children:"bool? IsSystemBarVisible { get; set; }\n"})}),"\n",(0,t.jsx)(s.h3,{id:"displayedgetoedge",children:"DisplayEdgeToEdge"}),"\n",(0,t.jsx)(s.p,{children:"Gets or sets a value indicating whether the window should be drawn edge-to-edge behind any visible system bars."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cs",children:"bool DisplayEdgeToEdge { get; set; }\n"})}),"\n",(0,t.jsx)(s.h3,{id:"safeareapadding",children:"SafeAreaPadding"}),"\n",(0,t.jsx)(s.p,{children:"Gets the current safe area padding. The safe area represents the portion of the window that is not obscured by system bars."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cs",children:"Thickness SafeAreaPadding { get; }\n"})}),"\n",(0,t.jsx)(s.h3,{id:"systembarcolor",children:"SystemBarColor"}),"\n",(0,t.jsx)(s.p,{children:"Gets or sets the color of the platform's system bars. Returns null if the platform doesn't support setting the system bar color."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cs",children:"Color? SystemBarColor { get; set; }\n"})}),"\n",(0,t.jsx)(s.h2,{id:"events",children:"Events"}),"\n",(0,t.jsx)(s.h3,{id:"safeareachanged",children:"SafeAreaChanged"}),"\n",(0,t.jsx)(s.p,{children:"Occurs when the safe area for the current window changes. This can happen when system bars are shown or hidden, or when the window's size or orientation changes."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-cs",children:"event EventHandler<SafeAreaChangedArgs>? SafeAreaChanged;\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"safeareachangedargs",children:"SafeAreaChangedArgs"}),"\n",(0,t.jsx)(s.p,{children:"SafeAreaChangedArgs is a class that provides data for the SafeAreaChanged event."}),"\n",(0,t.jsx)(s.h2,{id:"properties-1",children:"Properties"}),"\n",(0,t.jsx)(s.h3,{id:"safeareapadding-1",children:"SafeAreaPadding"}),"\n",(0,t.jsx)(s.p,{children:"Gets the new safe area padding."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-csharp",children:"public Thickness SafeAreaPadding { get; }\n"})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h1,{id:"systembartheme",children:"SystemBarTheme"}),"\n",(0,t.jsx)(s.p,{children:"SystemBarTheme is an enumeration with values that represent light and dark themes for the system bar."}),"\n",(0,t.jsx)(s.h2,{id:"values",children:"Values"}),"\n",(0,t.jsx)(s.h3,{id:"light",children:"Light"}),"\n",(0,t.jsx)(s.p,{children:"The system bar has a light background and a dark foreground."}),"\n",(0,t.jsx)(s.h3,{id:"dark",children:"Dark"}),"\n",(0,t.jsx)(s.p,{children:"The system bar has a dark background and a light foreground."}),"\n",(0,t.jsx)(s.h2,{id:"platform-compatibility",children:"Platform compatibility:"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Feature"}),(0,t.jsx)(s.th,{children:"Windows"}),(0,t.jsx)(s.th,{children:"macOS"}),(0,t.jsx)(s.th,{children:"Linux"}),(0,t.jsx)(s.th,{children:"Browser"}),(0,t.jsx)(s.th,{children:"Android"}),(0,t.jsx)(s.th,{children:"iOS"}),(0,t.jsx)(s.th,{children:"Tizen"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"IsSystemBarVisible"})}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2714*"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2716"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DisplayEdgeToEdge"})}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2716"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"SafeAreaPadding"})}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2714*"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2716"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"SystemBarColor"})}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"SafeAreaChanged"})}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2716"}),(0,t.jsx)(s.td,{children:"\u2714*"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2714"}),(0,t.jsx)(s.td,{children:"\u2716"})]})]})]}),"\n",(0,t.jsx)(s.p,{children:"* - only mobile Chromium browsers support IInsetsManager API."})]})}function o(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>i});var r=n(96540);const t={},a=r.createContext(t);function d(e){const s=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(a.Provider,{value:s},e.children)}}}]);