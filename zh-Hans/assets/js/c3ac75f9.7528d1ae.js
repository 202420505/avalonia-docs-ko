"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[170],{14178:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"components/media-player/mediaplayercontrol","title":"MediaPlayerControl","description":"The MediaPlayerControl is a fully-featured UI control for media playback that provides transport controls, progress","source":"@site/accelerate/components/media-player/mediaplayercontrol.md","sourceDirName":"components/media-player","slug":"/components/media-player/mediaplayercontrol","permalink":"/zh-Hans/accelerate/components/media-player/mediaplayercontrol","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/accelerate/components/media-player/mediaplayercontrol.md","tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"MediaPlayer","permalink":"/zh-Hans/accelerate/components/media-player/mediaplayer"},"next":{"title":"MediaSource","permalink":"/zh-Hans/accelerate/components/media-player/mediasource"}}');var s=r(74848),a=r(28453);const i={},l="MediaPlayerControl",d={},o=[{value:"Properties",id:"properties",level:2},{value:"Basic Properties",id:"basic-properties",level:3},{value:"Playback Properties",id:"playback-properties",level:3},{value:"State Properties",id:"state-properties",level:3},{value:"Audio Properties",id:"audio-properties",level:3},{value:"Command Properties",id:"command-properties",level:3},{value:"Events",id:"events",level:2},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Binding to Commands",id:"binding-to-commands",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Template Parts and Customization",id:"template-parts-and-customization",level:2},{value:"Lifecycle Management",id:"lifecycle-management",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Related Components",id:"related-components",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"mediaplayercontrol",children:"MediaPlayerControl"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})," is a fully-featured UI control for media playback that provides transport controls, progress\ndisplay, volume control, and video rendering. It encapsulates a ",(0,s.jsx)(n.code,{children:"MediaPlayer"})," instance and provides a rich user\ninterface for media playback."]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"basic-properties",children:"Basic Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Player"}),(0,s.jsx)(n.td,{children:"MediaPlayer"}),(0,s.jsx)(n.td,{children:"Gets the underlying MediaPlayer instance that handles the actual media playback operations."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Source"}),(0,s.jsx)(n.td,{children:"MediaSource"}),(0,s.jsxs)(n.td,{children:["Gets or sets the media source to be played (",(0,s.jsx)(n.code,{children:"UriSource"})," or ",(0,s.jsx)(n.code,{children:"StreamSource"}),")."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"LoadedBehavior"}),(0,s.jsx)(n.td,{children:"MediaPlayerState"}),(0,s.jsxs)(n.td,{children:["Gets or sets the behavior when media is loaded (",(0,s.jsx)(n.code,{children:"AutoPlay"})," or ",(0,s.jsx)(n.code,{children:"Manual"}),")."]})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"playback-properties",children:"Playback Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Position"}),(0,s.jsx)(n.td,{children:"TimeSpan"}),(0,s.jsx)(n.td,{children:"Gets or sets the current playback position."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Duration"}),(0,s.jsx)(n.td,{children:"TimeSpan?"}),(0,s.jsx)(n.td,{children:"Gets the total duration of the current media. Null for non-seekable media."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsxs)(n.td,{children:[(0,s.jsx)("a",{name:"skipTime"}),"SkipTime"]}),(0,s.jsx)(n.td,{children:"TimeSpan"}),(0,s.jsx)(n.td,{children:"Gets or sets the time to skip with forward/backward commands (default: 10s)."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"state-properties",children:"State Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IsBuffering"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets whether the media is currently buffering."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"BufferProgress"}),(0,s.jsx)(n.td,{children:"double?"}),(0,s.jsx)(n.td,{children:"Gets the buffer progress (0.0-1.0). Null if not available."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IsPaused"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets whether the media playback is currently paused."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IsMediaActive"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets whether media is currently active (loaded and/or playing)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"HasVideo"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets whether the current media contains video content."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IsSeekable"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets whether the current media can be seeked."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IsOverlayTimeoutEnabled"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets or sets whether control overlay should hide after inactivity."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"audio-properties",children:"Audio Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Volume"}),(0,s.jsx)(n.td,{children:"double"}),(0,s.jsx)(n.td,{children:"Gets or sets the playback volume with normalized values (e.g., 0.0-1.0)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"IsMuted"}),(0,s.jsx)(n.td,{children:"bool"}),(0,s.jsx)(n.td,{children:"Gets whether audio is currently muted."})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"command-properties",children:"Command Properties"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Property"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PlayPauseCommand"}),(0,s.jsx)(n.td,{children:"ICommand"}),(0,s.jsx)(n.td,{children:"Gets the command that toggles between play and pause states."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"StopCommand"}),(0,s.jsx)(n.td,{children:"ICommand"}),(0,s.jsx)(n.td,{children:"Gets the command that stops playback."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MuteCommand"}),(0,s.jsx)(n.td,{children:"ICommand"}),(0,s.jsx)(n.td,{children:"Gets the command that toggles audio muting."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SkipForwardCommand"}),(0,s.jsx)(n.td,{children:"ICommand"}),(0,s.jsxs)(n.td,{children:["Gets the command that skips forward by ",(0,s.jsx)(n.a,{href:"#skipTime",children:"SkipTime"})," amount."]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SkipBackwardCommand"}),(0,s.jsx)(n.td,{children:"ICommand"}),(0,s.jsxs)(n.td,{children:["Gets the command that skips backward by ",(0,s.jsx)(n.a,{href:"#skipTime",children:"SkipTime"})," amount."]})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"events",children:"Events"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Event"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ErrorOccurred"}),(0,s.jsx)(n.td,{children:"Occurs when an error is encountered during media operations."})]})})]}),"\n",(0,s.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,s.jsx)(n.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xaml",children:'<MediaPlayerControl Name="mediaPlayerControl" Source="{Binding MediaSource}" \n                    Volume="0.8"\n                    LoadedBehavior="AutoPlay" />\n'})}),"\n",(0,s.jsx)(n.h3,{id:"binding-to-commands",children:"Binding to Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xaml",children:'<Button Command="{Binding #mediaPlayerControl.PlayPauseCommand}" \n        Content="Play/Pause" />\n        \n<Button Command="{Binding #mediaPlayerControl.StopCommand}" \n        Content="Stop" />\n'})}),"\n",(0,s.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-csharp",children:'mediaPlayerControl.ErrorOccurred += (sender, args) =>\n{\n    Console.WriteLine($"Media error: {args.Message}");\n    args.Handled = true; // Prevents the exception from being thrown.\n};\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": This callback gives you the opportunity to reset the state of the ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})," gracefully."]}),"\n",(0,s.jsx)(n.h2,{id:"template-parts-and-customization",children:"Template Parts and Customization"}),"\n",(0,s.jsxs)(n.p,{children:["The default control template for ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})," includes several key parts:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"PART_MediaPlayerPresenter"}),": Displays the video content"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MediaControlOverlay"}),": Contains the playback controls"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"MediaHoverOverlay"}),": Contains UI elements for hover state"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The most basic configuration of the ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})," can be like this:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'\x3c!-- In a ResourceDictionary referenced by your app. --\x3e\n<ControlTheme x:Key="{x:Type MediaPlayerControl}" TargetType="MediaPlayerControl">\n  <Setter Property="Template">\n    <ControlTemplate>\n      \x3c!-- This border is for decoration and for setting a default background for the control \n         When there\'s no media. --\x3e\n      <Border Background="Gray" ClipToBounds="True" CornerRadius="4">\n        <Panel>\n          \x3c!-- This is used to have a dark background against the MediaPlayerPresenter when there\'s a \n                 video to be displayed. --\x3e\n          <Border IsVisible="{TemplateBinding HasVideo}">\n            <Border Background="Black" IsVisible="{TemplateBinding IsMediaActive}"/>\n          </Border>\n\n          \x3c!-- This ViewBox is responsible on how the MediaPlayerPresenter is stretched to fit\n                 the bounding area of the control. --\x3e\n          <Viewbox>\n            \x3c!-- The control in which the internal MediaPlayer draws the video --\x3e\n            <MediaPlayerPresenter Name="PART_MediaPlayerPresenter"/>\n          </Viewbox>\n\n          \x3c!-- Example of the overlay playback controls. \n                 Use the built-in Commands to easily control the playback. --\x3e\n          <DockPanel LastChildFill="True" MaxHeight="64" VerticalAlignment="Bottom">\n            <ProgressBar DockPanel.Dock="Bottom"\n                         IsIndeterminate="True"\n                         IsVisible="{TemplateBinding IsBuffering}"/>\n            <StackPanel Orientation="Horizontal"\n                        HorizontalAlignment="Center"\n                        Spacing="10"\n                        Margin="5"\n                        TextElement.FontSize="24">\n              <Button Content="&#x23EF;"\n                      Padding="5,-5,5,0"\n                      Command="{TemplateBinding PlayPauseCommand}"/>\n              <Button Content="&#x23F9;"\n                      Padding="5,-5,5,0"\n                      Command="{TemplateBinding StopCommand}"/>\n            </StackPanel>\n          </DockPanel>\n        </Panel>\n      </Border>\n    </ControlTemplate>\n  </Setter>\n</ControlTheme>\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can use that and the default theme as a jumping point for your desired look for ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})]}),"\n",(0,s.jsx)(n.h2,{id:"lifecycle-management",children:"Lifecycle Management"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})," automatically manages the lifecycle of its internal ",(0,s.jsx)(n.code,{children:"MediaPlayer"}),":"]}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n    Start([Start]) --\x3e Attached\n\n    subgraph Init[Initialization]\n        Attached[OnAttachedToVisualTree] --\x3e Create[Create MediaPlayer]\n        Create --\x3e Events[Set up events]\n        Events --\x3e InitPlayer[Initialize player]\n    end\n\n    subgraph Setup[Template Setup]\n        Template[OnApplyTemplate] --\x3e FindPresenter[Find presenter]\n        FindPresenter --\x3e Connect[Connect to presenter]\n    end\n\n    subgraph Cleanup[Resource Cleanup]\n        Detached[OnDetachedFromVisualTree] --\x3e DisconnectEvents[Remove events]\n        DisconnectEvents --\x3e ReleasePlayer[Release resources]\n    end\n\n    Init --\x3e Setup\n    Setup --\x3e Usage([Usage])\n    Usage --\x3e Cleanup\n    class Init,Setup,Cleanup phase"}),"\n",(0,s.jsxs)(n.p,{children:["Here's a more comprehensive graph of ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"}),"'s interactions with its internal ",(0,s.jsx)(n.code,{children:"MediaPlayer"})," over the course of its\nlifetime:"]}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart LR\n    subgraph UI[MediaPlayerControl]\n        UI_Init[Control Attached] --\x3e SetSource[Set Source]\n        SetSource --\x3e UI_Prepared[Update UI]\n        UI_Prepared --\x3e UserPlay[User Clicks Play]\n        UserPlay --\x3e UI_Playing[Update UI: Playing]\n        UI_Playing --\x3e UserPause[User Clicks Pause]\n        UserPause --\x3e UI_Paused[Update UI: Paused]\n        UI_Paused --\x3e UserPlay\n        UI_Playing --\x3e UserStop[User Clicks Stop]\n        UserStop --\x3e UI_Stopped[Update UI: Stopped]\n        UI_Playing --\x3e UserSeek[User Drags Position Slider]\n        UserSeek --\x3e UI_NewPosition[Update Position]\n        UI_Paused --\x3e UserSeek\n        UI_Playing --\x3e MediaEnd[Media End Detected]\n        MediaEnd --\x3e UI_Completed[Update UI: Completed]\n    end\n\n    subgraph Player[MediaPlayer]\n        MP_Init[Initialize] --\x3e MP_SetSource[Set Source]\n        MP_SetSource --\x3e MP_Prepare[Prepare]\n        MP_Prepare --\x3e MP_Play[Play]\n        MP_Play --\x3e MP_Pause[Pause]\n        MP_Pause --\x3e MP_Play\n        MP_Play --\x3e MP_Stop[Stop]\n        MP_Play --\x3e MP_Seek[Seek]\n        MP_Pause --\x3e MP_Seek\n        MP_Play --\x3e MP_Complete[PlaybackCompleted]\n    end\n\n    UI_Init ---\x3e|InitializeAsync| MP_Init\n    SetSource ---\x3e|Source Property| MP_SetSource\n    SetSource ---\x3e|PrepareAsync| MP_Prepare\n    UserPlay ---\x3e|PlayAsync| MP_Play\n    UserPause ---\x3e|PauseAsync| MP_Pause\n    UserStop ---\x3e|StopAsync| MP_Stop\n    UserSeek ---\x3e|Position Property| MP_Seek\n    MP_Complete ---\x3e|Event| MediaEnd\n    classDef uiStates stroke: #333, stroke-width: 1px\n    classDef playerStates stroke: #333, stroke-width: 1px\n\n    class UI_Init,SetSource,UI_Prepared,UserPlay,UI_Playing,UserPause,UI_Paused,UserStop,UI_Stopped,UserSeek,UI_NewPosition,MediaEnd,UI_Completed uiStates\n    class MP_Init,MP_SetSource,MP_Prepare,MP_Play,MP_Pause,MP_Stop,MP_Seek,MP_Complete playerStates"}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Error Handling"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Always subscribe to the ",(0,s.jsx)(n.code,{children:"ErrorOccurred"})," event to handle errors gracefully."]}),"\n",(0,s.jsxs)(n.li,{children:["Set the ",(0,s.jsx)(n.code,{children:"Handled"})," property to true on the ",(0,s.jsx)(n.code,{children:"ErrorOccurred"})," event handler if you've managed the error."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Resource Management"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The control manages the ",(0,s.jsx)(n.code,{children:"MediaPlayerControl"})," lifecycle automatically."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"UI Integration"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use the built-in commands for integrating with custom buttons/controls."}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"IsMediaActive"})," property is useful for enabling/disabling UI elements."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"related-components",children:"Related Components"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/zh-Hans/accelerate/components/media-player/mediaplayer",children:"MediaPlayer"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/zh-Hans/accelerate/components/media-player/mediasource",children:"MediaSource"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var t=r(96540);const s={},a=t.createContext(s);function i(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);