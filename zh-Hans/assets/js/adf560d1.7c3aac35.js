"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[2340],{23530:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"tutorials/groupbox","title":"Create a GroupBox Using HeaderedContentControl","description":"While Avalonia doesn\'t include a built-in GroupBox control, you can achieve the same functionality and appearance using a HeaderedContentControl with custom styling. The HeaderedContentControl provides a header area and content region, making it perfect for grouping related interface elements.","source":"@site/docs/tutorials/groupbox.md","sourceDirName":"tutorials","slug":"/tutorials/groupbox","permalink":"/zh-Hans/docs/tutorials/groupbox","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/tutorials/groupbox.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755588461000,"frontMatter":{"id":"groupbox","title":"Create a GroupBox Using HeaderedContentControl","sidebar_label":"Creating a GroupBox"},"sidebar":"documentationSidebar","previous":{"title":"Samples","permalink":"/zh-Hans/docs/tutorials/samples"},"next":{"title":"Music Store App","permalink":"/zh-Hans/docs/tutorials/music-store-app/"}}');var r=t(74848),i=t(28453);const a=t.p+"assets/images/groupbox-48b3afad4fc37be311ae9417d0922557.png",s={id:"groupbox",title:"Create a GroupBox Using HeaderedContentControl",sidebar_label:"Creating a GroupBox"},d=void 0,l={},c=[{value:"Implementation",id:"implementation",level:2}];function u(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components},{GitHubSampleLink:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("GitHubSampleLink",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["While Avalonia doesn't include a built-in ",(0,r.jsx)(n.code,{children:"GroupBox"})," control, you can achieve the same functionality and appearance using a ",(0,r.jsx)(n.code,{children:"HeaderedContentControl"})," with custom styling. The ",(0,r.jsx)(n.code,{children:"HeaderedContentControl"})," provides a header area and content region, making it perfect for grouping related interface elements."]}),"\n",(0,r.jsx)(t,{title:"Custom GroupBox",link:"https://github.com/AvaloniaUI/AvaloniaUI.QuickGuides/tree/main/GroupBox"}),"\n",(0,r.jsx)(n.h2,{id:"implementation",children:"Implementation"}),"\n",(0,r.jsxs)(n.p,{children:["Add the following style to your application resources (typically in App.axaml) or to the specific ",(0,r.jsx)(n.code,{children:"Window"})," or ",(0,r.jsx)(n.code,{children:"UserControl"})," where you need the ",(0,r.jsx)(n.code,{children:"GroupBox"})," functionality:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:"title='XAML'",children:'<Style Selector="HeaderedContentControl">\n    <Setter Property="Template">\n        <ControlTemplate>\n            <Grid>\n                <Grid.RowDefinitions>\n                    <RowDefinition Height="Auto"/>\n                    <RowDefinition Height="*"/>\n                </Grid.RowDefinitions>\n                <Grid.ColumnDefinitions>\n                    <ColumnDefinition Width="Auto"/>\n                    <ColumnDefinition Width="*"/>\n                </Grid.ColumnDefinitions>\n        \n                \x3c!-- Header --\x3e\n                <Border \n                    ZIndex="1" \n                    Background="{DynamicResource SystemControlBackgroundAltHighBrush}" \n                    Padding="5,0,5,0" \n                    Margin="5,0,0,0">\n                    <TextBlock \n                        Text="{TemplateBinding Header}" \n                        FontWeight="Bold"/>\n                </Border>\n        \n                \x3c!-- Content Area --\x3e\n                <Border \n                    Grid.RowSpan="2" \n                    Padding="0,5,0,0"\n                    Grid.ColumnSpan="2"\n                    CornerRadius="4"\n                    Margin="0,10,0,0"\n                    BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}"\n                    BorderThickness="1">\n                    <ContentPresenter \n                        Name="PART_ContentPresenter"\n                        Padding="8"\n                        Content="{TemplateBinding Content}"/>\n                </Border>\n            </Grid>\n        </ControlTemplate>\n    </Setter>\n</Style>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Once the style is in place, you can use the ",(0,r.jsx)(n.code,{children:"HeaderedContentControl"})," in your XAML:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",metastring:"title='XAML'",children:'<HeaderedContentControl Header="Settings">\n    <StackPanel Spacing="8">\n        <TextBox Text="Sample content"/>\n        <Button Content="Click me"/>\n    </StackPanel>\n</HeaderedContentControl>\n'})}),"\n",(0,r.jsx)("img",{className:"center",src:a,width:"200"}),"\n",(0,r.jsxs)(n.p,{children:['The style uses Avalonia\'s theme resources to ensure the control looks appropriate in both light and dark themes. The header text appears to "break" the border line by using a background color matching the window, creating the classic ',(0,r.jsx)(n.code,{children:"GroupBox"})," appearance. The content area features rounded corners and proper padding for a modern look."]}),"\n",(0,r.jsxs)(n.p,{children:["This implementation provides all the visual and functional benefits of a traditional ",(0,r.jsx)(n.code,{children:"GroupBox"})," while maintaining consistency with Avalonia's design patterns and theme system."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(96540);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);