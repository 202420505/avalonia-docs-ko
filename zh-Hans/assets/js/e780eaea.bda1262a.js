"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[5899],{31736:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>p,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"guides/development-guides/how-to-implement-multi-page-apps","title":"How To Implement Multi-page Apps","description":"Content in preparation.","source":"@site/docs/guides/development-guides/how-to-implement-multi-page-apps.md","sourceDirName":"guides/development-guides","slug":"/guides/development-guides/how-to-implement-multi-page-apps","permalink":"/zh-Hans/docs/guides/development-guides/how-to-implement-multi-page-apps","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/guides/development-guides/how-to-implement-multi-page-apps.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755588461000,"frontMatter":{"id":"how-to-implement-multi-page-apps","title":"How To Implement Multi-page Apps"},"sidebar":"documentationSidebar","previous":{"title":"Data Validation","permalink":"/zh-Hans/docs/guides/development-guides/data-validation"},"next":{"title":"How To Show and Hide a Split View Pane with MVVM","permalink":"/zh-Hans/docs/guides/development-guides/how-to-show-and-hide-a-split-view-pane-with-mvvm"}}');var o=n(74848),i=n(28453);const p={id:"how-to-implement-multi-page-apps",title:"How To Implement Multi-page Apps"},l="How To Implement Multi-page Apps",s={},d=[];function r(e){const t={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"how-to-implement-multi-page-apps",children:"How To Implement Multi-page Apps"})}),"\n",(0,o.jsx)(t.p,{children:"Content in preparation."}),"\n",(0,o.jsx)(t.p,{children:"This guide will show you how to employ user controls as page views, and the view locator class, to implement a multiple-page application."}),"\n",(0,o.jsx)(t.p,{children:"that is added by the Avalonia MVVM solution template."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-csharp",children:'public class ViewLocator : IDataTemplate\n{\n    public Control? Build(object? data)\n    {\n        if (data==null) return null;\n        var name = data.GetType().FullName!.Replace("ViewModel", "View");\n        var type = Type.GetType(name);\n\n        if (type != null)\n        {\n            return (Control)Activator.CreateInstance(type)!;\n        }\n\n        return new TextBlock { Text = "Not Found: " + name };\n    }\n\n    public bool Match(object? data)\n    {\n        return data is ViewModelBase;\n    }\n}\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>p,x:()=>l});var a=n(96540);const o={},i=a.createContext(o);function p(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:p(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);