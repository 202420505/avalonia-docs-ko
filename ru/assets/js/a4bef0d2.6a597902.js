"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[2539],{60744:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"build-feeds","title":"XPF Versioning","description":"The latest stable version of Avalonia XPF is 1.5.3.","source":"@site/xpf/build-feeds.md","sourceDirName":".","slug":"/build-feeds","permalink":"/ru/xpf/build-feeds","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/xpf/build-feeds.md","tags":[],"version":"current","frontMatter":{"id":"build-feeds","title":"XPF Versioning"},"sidebar":"documentationSidebar","previous":{"title":"Porting Tips","permalink":"/ru/xpf/porting-tips"},"next":{"title":"Third party libraries","permalink":"/ru/xpf/third-party-libraries"}}');var s=t(74848),o=t(28453);const r={id:"build-feeds",title:"XPF Versioning"},a=void 0,l={},d=[];function u(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"The latest stable version of Avalonia XPF is 1.5.3."}),"\n",(0,s.jsx)(n.p,{children:"For product releases it is recommended that you use the latest stable version, but for general development you may want to update to the latest development version frequently."}),"\n",(0,s.jsxs)(n.p,{children:["The latest version can be found on our ",(0,s.jsx)(n.a,{href:"https://xpf-nuget-feed.avaloniaui.net/packages/xpf.sdk",children:"nuget server"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"To log into the web portal, use the following credentials:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Username: ",(0,s.jsx)(n.code,{children:"license"})]}),"\n",(0,s.jsxs)(n.li,{children:["Password: ",(0,s.jsx)(n.code,{children:"<YOUR_LICENSE_KEY>"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Nightly builds of XPF may depend on pre-release versions of Avalonia, so ensure that you have the following ",(0,s.jsx)(n.a,{href:"getting-started#step-2-add-a-nugetconfig",children:"feeds configured"})," in your ",(0,s.jsx)(n.code,{children:"NuGet.config"})," file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'    <add key="api.nuget.org" value="https://api.nuget.org/v3/index.json" />\n    <add key="xpf" value="https://xpf-nuget-feed.avaloniaui.net/v3/index.json" />\n    <add key="avalonia-nightly" value="https://nuget-feed-all.avaloniaui.net/v3/index.json" />\n'})})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(96540);const s={},o=i.createContext(s);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);