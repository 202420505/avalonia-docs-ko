"use strict";(self.webpackChunkavalonia_docs=self.webpackChunkavalonia_docs||[]).push([[417],{51361:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>p,frontMatter:()=>d,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"guides/platforms/android/embed-native-views","title":"Embed Native Views","description":"In Avalonia UI, you can use the native control host feature on Android by creating an instance of AndroidViewControlHandle from an Android view.","source":"@site/docs/guides/platforms/android/embed-native-views.md","sourceDirName":"guides/platforms/android","slug":"/guides/platforms/android/embed-native-views","permalink":"/ru/docs/guides/platforms/android/embed-native-views","draft":false,"unlisted":false,"editUrl":"https://github.com/AvaloniaUI/avalonia-docs/tree/main/docs/guides/platforms/android/embed-native-views.md","tags":[],"version":"current","lastUpdatedBy":"202420505","lastUpdatedAt":1755588461000,"frontMatter":{"id":"embed-native-views","title":"Embed Native Views"},"sidebar":"documentationSidebar","previous":{"title":"How To Set Up an Android Dev Environment","permalink":"/ru/docs/guides/platforms/android/setting-up-your-developer-environment-for-android"},"next":{"title":"How To Develop For Mobile iOS","permalink":"/ru/docs/guides/platforms/ios/"}}');var i=t(74848),a=t(28453);const d={id:"embed-native-views",title:"Embed Native Views"},r=void 0,s={},l=[];function c(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["In Avalonia UI, you can use the native control host feature on Android by creating an instance of ",(0,i.jsx)(n.code,{children:"AndroidViewControlHandle"})," from an Android view."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["This documentation is based on the ",(0,i.jsx)(n.a,{href:"https://github.com/AvaloniaUI/Avalonia/blob/master/samples/ControlCatalog.Android/EmbedSample.Android.cs",children:"following example"}),"."]})}),"\n",(0,i.jsxs)(n.p,{children:["We have a class named ",(0,i.jsx)(n.code,{children:"EmbedSampleAndroid"})," implementing the ",(0,i.jsx)(n.code,{children:"INativeDemoControl"})," interface. This class contains a method ",(0,i.jsx)(n.code,{children:"CreateControl"})," which demonstrates how to use native control host."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:' public interface INativeDemoControl\n    {\n        /// <param name="isSecond">Used to specify which control should be displayed as a demo</param>\n        /// <param name="parent"></param>\n        /// <param name="createDefault"></param>\n        IPlatformHandle CreateControl(bool isSecond, IPlatformHandle parent, Func<IPlatformHandle> createDefault);\n    }\n\npublic class EmbedSampleAndroid : INativeDemoControl\n{\n    public IPlatformHandle CreateControl(bool isSecond, IPlatformHandle parent, Func<IPlatformHandle> createDefault)\n    {\n        var parentContext = (parent as AndroidViewControlHandle)?.View.Context\n            ?? global::Android.App.Application.Context;\n\n        if (isSecond)\n        {\n            var webView = new global::Android.Webkit.WebView(parentContext);\n            webView.LoadUrl("https://www.android.com/");\n\n            return new AndroidViewControlHandle(webView);\n        }\n        else\n        {\n            var button = new global::Android.Widget.Button(parentContext) { Text = "Hello world" };\n            var clickCount = 0;\n            button.Click += (sender, args) =>\n            {\n                clickCount++;\n                button.Text = $"Click count {clickCount}";\n            };\n\n            return new AndroidViewControlHandle(button);\n        }\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In this method, ",(0,i.jsx)(n.code,{children:"CreateControl"}),", the ",(0,i.jsx)(n.code,{children:"parent"})," object is cast to ",(0,i.jsx)(n.code,{children:"AndroidViewControlHandle"})," to get the ",(0,i.jsx)(n.code,{children:"View"}),"'s Context. If this fails, the global application context is used."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"isSecond"})," parameter is used to decide which control to create. If it's ",(0,i.jsx)(n.code,{children:"true"}),", a ",(0,i.jsx)(n.code,{children:"WebView"}),' is created, navigates to "',(0,i.jsx)(n.a,{href:"https://www.android.com/",children:"https://www.android.com/"}),'", and its instance is wrapped in an ',(0,i.jsx)(n.code,{children:"AndroidViewControlHandle"})," which is then returned."]}),"\n",(0,i.jsxs)(n.p,{children:["If ",(0,i.jsx)(n.code,{children:"isSecond"})," is ",(0,i.jsx)(n.code,{children:"false"}),', a Button is created with the text "Hello world". The button\'s ',(0,i.jsx)(n.code,{children:"Click"})," event is wired up to an event handler that increases the ",(0,i.jsx)(n.code,{children:"clickCount"})," and updates the button's text to display the number of clicks. The ",(0,i.jsx)(n.code,{children:"Button"})," instance is also wrapped in an ",(0,i.jsx)(n.code,{children:"AndroidViewControlHandle"})," and returned."]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>r});var o=t(96540);const i={},a=o.createContext(i);function d(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),o.createElement(a.Provider,{value:n},e.children)}}}]);